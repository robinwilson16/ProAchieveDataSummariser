SELECT
	NatRate_Yr_Leave = NR_YR.Leave,
	NatRate_Yr_Ach = NR_YR.Ach,
	NatRate_Yr_AchPer = NR_YR.AchPer,
	NatRate_Aim_Leave = NR_AIM.BM_Count_Overall,
	NatRate_Aim_Ach = ROUND ( ( CAST ( NR_AIM.BM_Count_Overall AS FLOAT ) / 100 ) * NR_AIM.BM_AchCount_Overall, 0 ),
	NatRate_Aim_AchPer = NR_AIM.BM_AchCount_Overall,
	NatRate_Age2_Leave = NR_AGE2.BM_Count_Overall,
	NatRate_Age2_Ach = ROUND ( ( CAST ( NR_AGE2.BM_Count_Overall AS FLOAT ) / 100 ) * NR_AGE2.BM_AchCount_Overall, 0 ),
	NatRate_Age2_AchPer = NR_AGE2.BM_AchCount_Overall,
	NatRate_QualSize_Leave = NR_QS.Leave,
	NatRate_QualSize_Ach = NR_QS.Ach,
	NatRate_QualSize_AchPer = NR_QS.AchPer,
	NatRate_Age_Leave = NR_AGE.Leave,
	NatRate_Age_Ach = NR_AGE.Ach,
	NatRate_Age_AchPer = NR_AGE.AchPer,
	NatRate_AgeGender_Leave = NR_AGEGEN.Leave,
	NatRate_AgeGender_Ach = NR_AGEGEN.Ach,
	NatRate_AgeGender_AchPer = NR_AGEGEN.AchPer,
	NatRate_Level_Leave = NR_LEV.Leave,
	NatRate_Level_Ach = NR_LEV.Ach,
	NatRate_Level_AchPer = NR_LEV.AchPer,
	NatRate_Ethnicity_Leave = NR_ETH.Leave,
	NatRate_Ethnicity_Ach = NR_ETH.Ach,
	NatRate_Ethnicity_AchPer = NR_ETH.AchPer,
	NatRate_SSA1_Leave = NR_SSA1.Leave,
	NatRate_SSA1_Ach = NR_SSA1.Ach,
	NatRate_SSA1_AchPer = NR_SSA1.AchPer,
	NatRate_SSA2_Leave = NR_SSA2.Leave,
	NatRate_SSA2_Ach = NR_SSA2.Ach,
	NatRate_SSA2_AchPer = NR_SSA2.AchPer,
	NatRate_DifDis_Leave = NR_DIF.Leave,
	NatRate_DifDis_Ach = NR_DIF.Ach,
	NatRate_DifDis_AchPer = NR_DIF.AchPer
FROM CL_Midpoint CL
INNER JOIN vCL_MYS_RDS_Seln MYS 
	ON MYS.CL_MidpointID = CL.CL_MidpointID
	AND MYS.PG_ProviderID = CL.PG_ProviderID
	AND MYS.DefaultSummary = 1
	AND MYS.IsArchived = 0
	AND MYS.IsQSRSummary = 0
	AND MYS.RulesApplied = 1
	AND MYS.IncludeAllAimTypes = 0
LEFT JOIN (
	SELECT
		PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
	FROM PG_NationalRates_CL_Qual_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
) NR_L
	ON 1 = 1
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID
) NR_YR
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_YR.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_YR.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_YR.PG_HybridEndYearID = CL.PG_HybridEndYearID
LEFT JOIN PG_NationalRates_CL_Qual_Overall NR_AIM
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_AIM.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_AIM.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_AIM.PG_CollegeTypeID = 0
	AND NR_AIM.PG_AimID = CL.PG_AimID
	AND NR_AIM.PG_MapID IS NULL
	AND NR_AIM.PG_AgeLSCID IS NULL
LEFT JOIN PG_NationalRates_CL_Qual_Overall NR_AGE2
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_AGE2.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_AGE2.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_AGE2.PG_CollegeTypeID = 0
	AND NR_AGE2.PG_AimID IS NULL
	AND NR_AGE2.PG_MapID IS NULL
	AND NR_AGE2.PG_AgeLSCID = CL.PG_AgeLSCID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_QualSizeID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_QualSizeID
) NR_QS
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_QS.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_QS.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_QS.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_AgeLSCID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_AgeLSCID
) NR_AGE
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_AGE.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_AGE.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_AGE.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_AGE.PG_AgeLSCID = CL.PG_AgeLSCID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_AgeLSCID,
		NR.PG_SexID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_AgeLSCID,
		NR.PG_SexID
) NR_AGEGEN
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_AGEGEN.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_AGEGEN.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_AGEGEN.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_AGEGEN.PG_AgeLSCID = CL.PG_AgeLSCID
	AND NR_AGEGEN.PG_SexID = CL.PG_SexID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_NVQLevelCPRID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_NVQLevelCPRID
) NR_LEV
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_LEV.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_LEV.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_LEV.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_LEV.PG_NVQLevelCPRID = CL.PG_NVQLevelCPRID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_EthnicityID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_EthnicityID
) NR_ETH
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_ETH.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_ETH.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_ETH.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_ETH.PG_EthnicityID = CL.PG_EthnicityID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_SSA1ID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_SSA1ID
) NR_SSA1
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_SSA1.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_SSA1.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_SSA1.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_SSA1.PG_SSA1ID = CL.PG_SSA1ID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_SSA2ID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_SSA2ID
) NR_SSA2
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_SSA2.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_SSA2.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_SSA2.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_SSA2.PG_SSA2ID = CL.PG_SSA2ID
LEFT JOIN (
	SELECT
		NR.PG_HybridEndYearID,
		NR.PG_DifficultyOrDisabilityID,
		Leave = SUM ( NR.BM_Count_Overall ),
		Ach = SUM ( NR.BM_Ach_Overall ),
		AchPer = 
			CASE
				WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
				ELSE 
					ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
			END
	FROM PG_NationalRates_CL_High_Overall NR
	WHERE
		NR.PG_CollegeTypeID = 0
	GROUP BY
		NR.PG_HybridEndYearID,
		NR.PG_DifficultyOrDisabilityID
) NR_DIF
	ON
		CASE
			WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
				CASE
					WHEN NR_DIF.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
			ELSE 
				CASE
					WHEN CL.PG_HybridEndYearID = NR_DIF.PG_HybridEndYearID THEN 1
					ELSE 0 
				END
		END = 1
	AND NR_DIF.PG_HybridEndYearID = CL.PG_HybridEndYearID
	AND NR_DIF.PG_DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
WHERE
	CL.PG_ExpEndYrID = '17/18'