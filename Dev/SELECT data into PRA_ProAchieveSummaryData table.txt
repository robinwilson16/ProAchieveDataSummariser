--IF OBJECT_ID('dbo.ProAchieveLearnerData', 'U') IS NOT NULL 
--	DROP TABLE dbo.ProAchieveLearnerData;


DECLARE @AcademicYear VARCHAR(7) = '1718'

SELECT
	EndYear = CL.PG_HybridEndYearID,
	SummaryType = 'CL_Overall',
	DefaultSummary = MYS.DefaultSummary,
	ProviderID = MYS.PG_ProviderID,
	ProviderName = MYS.PG_ProviderName,
	Summary = MYS.Description,
	SummaryStatus = MYS.Status,
	AcademicYears = MYS.CL_MYSName,
	NumYears = MYS.Years,
	LastAcademicYear = MYS.LastAcademicYearID,
	RulesApplied = MYS.RulesApplied,
	LastUpdated = MYS.LastUpdated,
	DivisionCode = CL.PG_Structure1ID,
	DivisionName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
	SubDivisionCode = CL.PG_Structure2ID,
	SubDivisionName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
	CostCentreCode = CL.PG_Structure3ID,
	CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
	CourseCode = CRS.PG_AggCourseID,
	CourseName = CRS.PG_AggCourseName,
	GroupCode = CL.EnrolmentUserDefined1,
	SequenceNo = CL.SequenceNo,
	AimRef = AIM.GN_AimID,
	AimName = AIM.GN_AimName,
	QualTypeCode = CL.PG_QualSizeID,
	QualTypeName = QS.PG_QualSizeName,
	EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
	EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
	NVQLevelCode = NVQ.PG_NVQLevelCPRID,
	NVQLevelName = NVQ.PG_NVQLevelCPRName,
	NVQLevelGrpCode = NVQG.NVQLevelGroupID,
	NVQLevelGrpName = NVQG.Description,
	AimType = AIMT.LearnAimRefTypeDesc,
	AwardBody = AIM.PG_AwardBodyID,
	SSA1 = CL.PG_SSA1ID,
	StudentRef = CL.PG_StudentID,
	StudentName = CL.StudentName,
	Gender = CL.PG_SexID,
	EthnicityCode = CL.PG_EthnicityID,
	EthnicityName = ETH.Description,
	DiffDissCode = CL.PG_DifficultyOrDisabilityID,
	DiffDissName = DIF.ShortDescription,
	IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
	IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
	IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),
	FundModelCode = 
		CASE
			WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
			WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
			WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
			ELSE 'X'
		END,
	FundModelName = 
		CASE
			WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
			WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
			WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
			ELSE '-- Unknown --'
		END,
	IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
	IsAdvLearnLoanFunded = CL.Loan_Funded,
	IsStart = CL.CLStartOverall,
	IsLeaver = 
		CASE 
			WHEN 
				CL.CLOverdue = 1 
				AND CL.QSRExclude_Overall = 0 
				AND CL.P_Count_OverallQSRExclude = 0 
				THEN 1 
			ELSE 
				CL.P_Count_OverallQSRExclude 
		END,
	LessonsExpected = CL.Att_Exp,
	LessonsAttended = CL.Att_Act,
	AttendPer = 
		ROUND (
			CASE
				WHEN CL.Att_Exp = 0 THEN 0
				ELSE CAST ( CL.Att_Act AS FLOAT )  CAST ( CL.Att_Exp AS FLOAT )
			END
		, 4 ),
	AttendTar = TAR.Attend,
	LessonsLate = CL.Att_Lat,
	PuncPer = 
		ROUND (
			CASE
				WHEN CL.Att_Act = 0 THEN 0
				ELSE 100 - CAST ( CL.Att_Lat AS FLOAT )  CAST ( CL.Att_Act AS FLOAT )
			END
		, 4 ),
	PuncTar = TAR.Punc,
	IsXfr = CL.PVXfr,
	IsCont = 
		CASE 
			WHEN 
				CL.CLOverdue = 1 
				AND CL.QSRExclude_Overall = 0 
				AND CL.P_Count_OverallQSRExclude = 0 
				THEN 0
			ELSE 
				CL.PVCont
		END,
	IsWdr = 
		CASE 
			WHEN 
				CL.CLOverdue = 1 
				AND CL.QSRExclude_Overall = 0 
				AND CL.P_Count_OverallQSRExclude = 0 
				THEN 1
			ELSE 
				CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END
		END,
	IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
	IsWdrAfterQualifyingPeriod = 
		CASE 
			WHEN 
				CL.CLOverdue = 1 
				AND CL.QSRExclude_Overall = 0 
				AND CL.P_Count_OverallQSRExclude = 0 
				THEN 1
			ELSE 
				CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END
		END,
	IsOutOfFunding30 = 
		CASE
			WHEN CL.ContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) = 30 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding60 = 
		CASE
			WHEN CL.ContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding90 = 
		CASE
			WHEN CL.ContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsComp = CL.P_Complete_OverallQSRExclude,
	IsRetInYr = 
		CASE 
			WHEN 
				CL.CLOverdue = 1 
				AND CL.QSRExclude_Overall = 0 
				AND CL.P_Count_OverallQSRExclude = 0 
				THEN 0
			ELSE 
				CL.PVCont + CL.P_Complete_OverallQSRExclude
		END,
	IsRet = 
		CASE 
			WHEN 
				CL.CLOverdue = 1 
				AND CL.QSRExclude_Overall = 0 
				AND CL.P_Count_OverallQSRExclude = 0 
				THEN 1 
			ELSE 
				CL.P_Count_OverallQSRExclude 
		END,
	IsAch = CL.P_Ach_OverallQSRExclude,
	IsPassAToC = CL.CLPassRateAC_Overall
	INTO PRA_ProAchieveSummaryData
FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
	ON MYS.CL_MidpointID = CL.CL_MidpointID
	AND MYS.PG_ProviderID = CL.PG_ProviderID
	--AND MYS.DefaultSummary = 1 --Remove to include all colleges in group
	AND MYS.IsArchived = 0
	AND MYS.IsQSRSummary = 0
	AND MYS.RulesApplied = 1
INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
	ON ENR.PG_ProviderID = CL.PG_ProviderID
	AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
	AND ENR.PG_StudentID = CL.PG_StudentID
	AND ENR.SequenceNo = CL.SequenceNo
INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
	ON AIM.GN_AimID = CL.PG_AimID
INNER JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE 
	ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHD
	ON ETHD.PG_EthnicGroupID = CL.PG_EthnicGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHDS 
	ON ETHDS.PG_EthnicGroupSimpleID = ETHD.PG_EthnicGroupSimpleID
INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DUR 
	ON DUR.PG_DurationGroupID = CL.PG_DurationGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURG 
	ON DURG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
	ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
	ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
INNER JOIN ussql01.ProGeneral.dbo.AimRef_1718_LearnAimRefType AIMT 
	ON AIMT.LearnAimRefType = CL.PG_QType1ID
INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
	ON QS.PG_QualSizeID = CL.PG_QualSizeID
INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
	ON MINS.PG_QualSizeID = CL.PG_QualSizeID
INNER JOIN (
	SELECT
		TAR.Attend,
		TAR.Punc
	FROM (
		SELECT
			TargetType = 'Attend',
			TargetValue = 90

		UNION ALL

		SELECT
			TargetType = 'Punc',
			TargetValue = 90
	) T
	PIVOT (
		SUM ( T.TargetValue )
		FOR
			T.TargetType IN ( [Attend], [Punc] )
	) AS TAR
) TAR
	ON 1 = 1
LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
	ON FAM.PG_StudentID = CL.PG_StudentID
	AND FAM.PG_ProviderID = CL.PG_ProviderID
	AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
	ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
	ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
	ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
	AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
	ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
	AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
	ON CC.GN_Structure3IYID = CL.PG_Structure3ID
	AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
--	ON CRS.PG_CourseID = CL.PG_AggCourseID
--	AND CRS.PG_AcademicYearID = CL.PG_HybridEndYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
	ON CRS.PG_AggCourseID = CL.PG_AggCourseID
LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
	ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
	ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
LEFT JOIN ussql01.ProGeneral.dbo.Ethnicity ETH
	ON ETH.EthnicityID = CL.PG_EthnicityID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR 
	ON NR.PG_HybridEndYearID = (
		SELECT
			MAX ( NR2.PG_HybridEndYearID )
		FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR2
		WHERE
			NR2.PG_CollegeTypeID = 2
	)
	AND NR.PG_CollegeTypeID = 2
	AND NR.PG_AgeLSCID IS NULL
	AND NR.PG_AimID = CL.PG_AimID
	AND NR.PG_MapID IS NULL
LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
	ON ATT.StudentID = CL.PG_StudentID
	AND ATT.CollegeID = CL.PG_ProviderID
	AND ATT.AcademicYearID = CL.PG_AcademicYearID
	AND ATT.SequenceNo = CL.SequenceNo
LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
	ON LAC.StudentID = CL.PG_StudentID
	AND LAC.CollegeID = CL.PG_ProviderID
	AND LAC.AcademicYearID = CL.PG_AcademicYearID
WHERE 
	CL.PG_HybridEndYearID = @AcademicYear
	AND MYS.LastAcademicYearID = @AcademicYear
	--AND CL.PG_AimID = '50068295'

UNION ALL

SELECT
	EndYear = CL.PG_ExpEndYrID,
	SummaryType = 'CL_Timely',
	DefaultSummary = MYS.DefaultSummary,
	ProviderID = MYS.PG_ProviderID,
	ProviderName = MYS.PG_ProviderName,
	Summary = MYS.Description,
	SummaryStatus = MYS.Status,
	AcademicYears = MYS.CL_MYSName,
	NumYears = MYS.Years,
	LastAcademicYear = MYS.LastAcademicYearID,
	RulesApplied = MYS.RulesApplied,
	LastUpdated = MYS.LastUpdated,
	DivisionCode = CL.PG_Structure1ID,
	DivisionName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
	SubDivisionCode = CL.PG_Structure2ID,
	SubDivisionName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
	CostCentreCode = CL.PG_Structure3ID,
	CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
	CourseCode = CRS.PG_AggCourseID,
	CourseName = CRS.PG_AggCourseName,
	GroupCode = CL.EnrolmentUserDefined1,
	SequenceNo = CL.SequenceNo,
	AimRef = AIM.GN_AimID,
	AimName = AIM.GN_AimName,
	QualTypeCode = CL.PG_QualSizeID,
	QualTypeName = QS.PG_QualSizeName,
	EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
	EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
	NVQLevelCode = NVQ.PG_NVQLevelCPRID,
	NVQLevelName = NVQ.PG_NVQLevelCPRName,
	NVQLevelGrpCode = NVQG.NVQLevelGroupID,
	NVQLevelGrpName = NVQG.Description,
	AimType = AIMT.LearnAimRefTypeDesc,
	AwardBody = AIM.PG_AwardBodyID,
	SSA1 = CL.PG_SSA1ID,
	StudentRef = CL.PG_StudentID,
	StudentName = CL.StudentName,
	Gender = CL.PG_SexID,
	EthnicityCode = CL.PG_EthnicityID,
	EthnicityName = ETH.Description,
	DiffDissCode = CL.PG_DifficultyOrDisabilityID,
	DiffDissName = DIF.ShortDescription,
	IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
	IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
	IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),
	FundModelCode = 
		CASE
			WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
			WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
			WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
			ELSE 'X'
		END,
	FundModelName = 
		CASE
			WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
			WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
			WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
			ELSE '-- Unknown --'
		END,
	IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
	IsAdvLearnLoanFunded = CL.Loan_Funded,
	IsStart = CL.CLStartTimely,
	IsLeaver = CL.P_Count_TimelyQSRExclude,
	LessonsExpected = CL.Att_Exp,
	LessonsAttended = CL.Att_Act,
	AttendPer = 
		ROUND (
			CASE
				WHEN CL.Att_Exp = 0 THEN 0
				ELSE CAST ( CL.Att_Act AS FLOAT )  CAST ( CL.Att_Exp AS FLOAT )
			END
		, 4 ),
	AttendTar = TAR.Attend,
	LessonsLate = CL.Att_Lat,
	PuncPer = 
		ROUND (
			CASE
				WHEN CL.Att_Act = 0 THEN 0
				ELSE 100 - CAST ( CL.Att_Lat AS FLOAT )  CAST ( CL.Att_Act AS FLOAT )
			END
		, 4 ),
	PuncTar = TAR.Punc,
	IsXfr = CL.PVXfr,
	IsCont = CL.PVCont,
	IsWdr = CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END,
	IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
	IsWdrAfterQualifyingPeriod = CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END,
	IsOutOfFunding30 = 
		CASE
			WHEN CL.ContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) = 30 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding60 = 
		CASE
			WHEN CL.ContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding90 = 
		CASE
			WHEN CL.ContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsComp = CL.P_Complete_TimelyQSRExclude,
	IsRetInYr = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
	IsRet = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
	IsAch = CL.P_Ach_TimelyQSRExclude,
	IsPassAToC = CL.CLPassRateAC_Timely
FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
	ON MYS.CL_MidpointID = CL.CL_MidpointID
	AND MYS.PG_ProviderID = CL.PG_ProviderID
	--AND MYS.DefaultSummary = 1 --Remove to include all colleges in group
	AND MYS.IsArchived = 0
	AND MYS.IsQSRSummary = 0
	AND MYS.RulesApplied = 1
INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
	ON ENR.PG_ProviderID = CL.PG_ProviderID
	AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
	AND ENR.PG_StudentID = CL.PG_StudentID
	AND ENR.SequenceNo = CL.SequenceNo
INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
	ON AIM.GN_AimID = CL.PG_AimID
INNER JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE 
	ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHD
	ON ETHD.PG_EthnicGroupID = CL.PG_EthnicGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHDS 
	ON ETHDS.PG_EthnicGroupSimpleID = ETHD.PG_EthnicGroupSimpleID
INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DUR 
	ON DUR.PG_DurationGroupID = CL.PG_DurationGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURG 
	ON DURG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
	ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
	ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
INNER JOIN ussql01.ProGeneral.dbo.AimRef_1718_LearnAimRefType AIMT 
	ON AIMT.LearnAimRefType = CL.PG_QType1ID
INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
	ON QS.PG_QualSizeID = CL.PG_QualSizeID
INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
	ON MINS.PG_QualSizeID = CL.PG_QualSizeID
INNER JOIN (
	SELECT
		TAR.Attend,
		TAR.Punc
	FROM (
		SELECT
			TargetType = 'Attend',
			TargetValue = 90

		UNION ALL

		SELECT
			TargetType = 'Punc',
			TargetValue = 90
	) T
	PIVOT (
		SUM ( T.TargetValue )
		FOR
			T.TargetType IN ( [Attend], [Punc] )
	) AS TAR
) TAR
	ON 1 = 1
LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
	ON FAM.PG_StudentID = CL.PG_StudentID
	AND FAM.PG_ProviderID = CL.PG_ProviderID
	AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
	ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
	ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
	ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
	AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
	ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
	AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
	ON CC.GN_Structure3IYID = CL.PG_Structure3ID
	AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
--	ON CRS.PG_CourseID = CL.PG_AggCourseID
--	AND CRS.PG_AcademicYearID = CL.PG_HybridEndYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
	ON CRS.PG_AggCourseID = CL.PG_AggCourseID
LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
	ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
	ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
LEFT JOIN ussql01.ProGeneral.dbo.Ethnicity ETH
	ON ETH.EthnicityID = CL.PG_EthnicityID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR 
	ON NR.PG_ExpEndYrID = (
		SELECT
			MAX ( NR2.PG_ExpEndYrID )
		FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR2
		WHERE
			NR2.PG_CollegeTypeID = 2
	)
	AND NR.PG_CollegeTypeID = 2
	AND NR.PG_AgeLSCID IS NULL
	AND NR.PG_AimID = CL.PG_AimID
	AND NR.PG_MapID IS NULL
LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
	ON ATT.StudentID = CL.PG_StudentID
	AND ATT.CollegeID = CL.PG_ProviderID
	AND ATT.AcademicYearID = CL.PG_AcademicYearID
	AND ATT.SequenceNo = CL.SequenceNo
LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
	ON LAC.StudentID = CL.PG_StudentID
	AND LAC.CollegeID = CL.PG_ProviderID
	AND LAC.AcademicYearID = CL.PG_AcademicYearID
WHERE 
	CL.PG_ExpEndYrID = @AcademicYear
	AND MYS.LastAcademicYearID = @AcademicYear
	--AND CL.PG_AimID = '50068295'

UNION ALL

SELECT
	EndYear = ER.WB_HybridEndYearID,
	SummaryType = 'ER_Overall',
	DefaultSummary = MYS.DefaultSummary,
	ProviderID = MYS.PG_ProviderID,
	ProviderName = MYS.PG_ProviderName,
	Summary = MYS.Description,
	SummaryStatus = MYS.Status,
	AcademicYears = MYS.ER_MYSName,
	NumYears = MYS.Years,
	LastAcademicYear = MYS.LastAcademicYearID,
	RulesApplied = MYS.RulesApplied,
	LastUpdated = MYS.LastUpdated,
	DivisionCode = ER.PG_Structure1ID,
	DivisionName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
	SubDivisionCode = ER.PG_Structure2ID,
	SubDivisionName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
	CostCentreCode = ER.PG_Structure3ID,
	CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
	CourseCode = CRS.PG_AggCourseID,
	CourseName = CRS.PG_AggCourseName,
	GroupCode = ER.EnrolmentUserDefined1,
	SequenceNo = ER.SequenceNo,
	AimRef = AIM.GN_AimID,
	AimName = AIM.GN_AimName,
	QualTypeCode = ER.PG_QualSizeID,
	QualTypeName = QS.PG_QualSizeName,
	EngOrMathsCode = 'X',
	EngOrMathsName = 'Neither',
	NVQLevelCode = NVQ.PG_NVQLevelCPRID,
	NVQLevelName = NVQ.PG_NVQLevelCPRName,
	NVQLevelGrpCode = NVQG.NVQLevelGroupID,
	NVQLevelGrpName = NVQG.Description,
	AimType = AIMT.LearnAimRefTypeDesc,
	AwardBody = AIM.PG_AwardBodyID,
	SSA1 = ER.PG_SSA1ID,
	StudentRef = ER.PG_StudentID,
	StudentName = STU.Surname + ', ' + STU.Forenames,
	Gender = ER.PG_SexID,
	EthnicityCode = ER.PG_EthnicityID,
	EthnicityName = ETH.Description,
	DiffDissCode = ER.PG_DifficultyOrDisabilityID,
	DiffDissName = DIF.ShortDescription,
	IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
	IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
	IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),
	FundModelCode = 'APP',
	FundModelName = 'Apprenticeship',
	IsEFAFunded = 0,
	IsAdvLearnLoanFunded = 0,
	IsStart = ER.WBStartOverall,
	IsLeaver = ER.WBOverallLeave,
	LessonsExpected = ER.Att_Exp,
	LessonsAttended = ER.Att_Act,
	AttendPer = 
		ROUND (
			CASE
				WHEN ER.Att_Exp = 0 THEN 0
				ELSE CAST ( ER.Att_Act AS FLOAT )  CAST ( ER.Att_Exp AS FLOAT )
			END
		, 4 ),
	AttendTar = TAR.Attend,
	LessonsLate = ER.Att_Lat,
	PuncPer = 
		ROUND (
			CASE
				WHEN ER.Att_Act = 0 THEN 0
				ELSE 100 - CAST ( ER.Att_Lat AS FLOAT )  CAST ( ER.Att_Act AS FLOAT )
			END
		, 4 ),
	PuncTar = TAR.Punc,
	IsXfr = ER.WBXfr,
	IsCont = ER.WBContOverall,
	IsWdr = ER.WBLeave,
	IsWdrInQualifyingPeriod = ER.WBWithdrawnin6Wks,
	IsWdrAfterQualifyingPeriod = ER.WBWithdrawnAfter6wksOverall,
	IsOutOfFunding30 = 
		CASE
			WHEN ER.WBContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) = 30 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding60 = 
		CASE
			WHEN ER.WBContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding90 = 
		CASE
			WHEN ER.WBContinBeyondEnd = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsComp = ER.WBRet - ER.WBContOverall,
	IsRetInYr = 
		CASE
			WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
			ELSE ER.WBRet
		END,
	IsRet = 
		CASE
			WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
			ELSE ER.WBRet
		END,
	IsAch = ER.WBAchFrameOverallLSCExclude,
	IsPassAToC = 0
FROM ussql01.ProAchieve.dbo.vER_Summary_Apprenticeships ER
INNER JOIN ussql01.ProAchieve.dbo.vER_MYS_RDS_Seln MYS
	ON MYS.ER_MYSID = ER.ER_MYSID
	AND MYS.IsArchived = 0
	--AND MYS.DefaultSummary = 1
INNER JOIN ussql01.ProAchieve.dbo.PG_Student STU
	ON STU.PG_StudentID = ER.PG_StudentID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
	ON AIM.GN_AimID = ER.PG_AimID
INNER JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE 
	ON AGE.PG_AgeLSCID = ER.PG_AgeLSCID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHD
	ON ETHD.PG_EthnicGroupID = ER.PG_EthnicGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHDS 
	ON ETHDS.PG_EthnicGroupSimpleID = ETHD.PG_EthnicGroupSimpleID
INNER JOIN ussql01.ProGeneral.dbo.Ethnicity ETH
	ON ETH.EthnicityID = ER.PG_EthnicityID
INNER JOIN ussql01.ProAchieve.dbo.WB_Duration DUR 
	ON DUR.WB_DurationID = ER.WB_DurationID
INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
	ON SSA1.SSA_Tier1_code = ER.PG_SSA1ID
INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
	ON SSA2.SSA_Tier2_code = ER.PG_SSA2ID
INNER JOIN ussql01.ProAchieve.dbo.PG_ProgType PT
	ON PT.PG_ProgTypeID = ER.PG_ProgTypeID
INNER JOIN (
	SELECT
		TAR.Attend,
		TAR.Punc
	FROM (
		SELECT
			TargetType = 'Attend',
			TargetValue = 90

		UNION ALL

		SELECT
			TargetType = 'Punc',
			TargetValue = 90
	) T
	PIVOT (
		SUM ( T.TargetValue )
		FOR
			T.TargetType IN ( [Attend], [Punc] )
	) AS TAR
) TAR
	ON 1 = 1
LEFT JOIN ussql01.ProGeneral.dbo.AimRef_1718_LearnAimRefType AIMT 
	ON AIMT.LearnAimRefType = ER.PG_QType1ID
LEFT JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
	ON QS.PG_QualSizeID = ER.PG_QualSizeID
LEFT JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
	ON MINS.PG_QualSizeID = ER.PG_QualSizeID
LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
	ON FAM.PG_StudentID = ER.PG_StudentID
	AND FAM.PG_ProviderID = ER.PG_ProviderID
	AND FAM.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
	ON NVQ.PG_NVQLevelCPRID = ER.PG_NVQLevelID
LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
	ON NVQG.NVQLevelGroupID = ER.PG_NVQLevelGroupID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
	ON DIV.GN_Structure1IYID = ER.PG_Structure1ID
	AND DIV.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
	ON SUBDIV.GN_Structure2IYID = ER.PG_Structure2ID
	AND SUBDIV.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
	ON CC.GN_Structure3IYID = ER.PG_Structure3ID
	AND CC.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure4IY GRP
	ON GRP.GN_Structure4IYID = ER.PG_Structure4ID
	AND GRP.PG_AcademicYearID = ER.PG_ExpEndYrID
--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
--	ON CRS.PG_CourseID = ER.PG_AggCourseID
--	AND CRS.PG_AcademicYearID = ER.PG_HybridEndYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
	ON CRS.PG_AggCourseID = ER.PG_AggCourseID
LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
	ON DIF.DifficultyOrDisabilityID = ER.PG_DifficultyOrDisabilityID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Overall NR 
	ON NR.WB_HybridEndYearID = (
		SELECT
			MAX ( NR2.WB_HybridEndYearID )
		FROM ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Overall NR2
		WHERE
			NR2.PG_CollegeTypeID = 2
	)
	AND NR.PG_CollegeTypeID = 2
	AND NR.PG_WBLFundAgeGroupID IS NULL
	AND NR.PG_FrameworkID = ER.PG_FrameworkID
	AND NR.PG_ProgTypeID IS NULL
	AND NR.PG_SSA1ID IS NULL
	AND NR.PG_SSA2ID IS NULL
LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
	ON ATT.StudentID = ER.PG_StudentID
	AND ATT.CollegeID = ER.PG_ProviderID
	AND ATT.AcademicYearID = ER.PG_ExpEndYrID
	AND ATT.SequenceNo = ER.SequenceNo
LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
	ON LAC.StudentID = ER.PG_StudentID
	AND LAC.CollegeID = ER.PG_ProviderID
	AND LAC.AcademicYearID = ER.PG_ExpEndYrID
WHERE
	ER.WB_HybridEndYearID = @AcademicYear
	AND MYS.LastAcademicYearID = @AcademicYear

UNION ALL

SELECT
	EndYear = ER.PG_ExpEndYrID,
	SummaryType = 'ER_Timely',
	DefaultSummary = MYS.DefaultSummary,
	ProviderID = MYS.PG_ProviderID,
	ProviderName = MYS.PG_ProviderName,
	Summary = MYS.Description,
	SummaryStatus = MYS.Status,
	AcademicYears = MYS.ER_MYSName,
	NumYears = MYS.Years,
	LastAcademicYear = MYS.LastAcademicYearID,
	RulesApplied = MYS.RulesApplied,
	LastUpdated = MYS.LastUpdated,
	DivisionCode = ER.PG_Structure1ID,
	DivisionName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
	SubDivisionCode = ER.PG_Structure2ID,
	SubDivisionName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
	CostCentreCode = ER.PG_Structure3ID,
	CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
	CourseCode = CRS.PG_AggCourseID,
	CourseName = CRS.PG_AggCourseName,
	GroupCode = ER.EnrolmentUserDefined1,
	SequenceNo = ER.SequenceNo,
	AimRef = AIM.GN_AimID,
	AimName = AIM.GN_AimName,
	QualTypeCode = ER.PG_QualSizeID,
	QualTypeName = QS.PG_QualSizeName,
	EngOrMathsCode = 'X',
	EngOrMathsName = 'Neither',
	NVQLevelCode = NVQ.PG_NVQLevelCPRID,
	NVQLevelName = NVQ.PG_NVQLevelCPRName,
	NVQLevelGrpCode = NVQG.NVQLevelGroupID,
	NVQLevelGrpName = NVQG.Description,
	AimType = AIMT.LearnAimRefTypeDesc,
	AwardBody = AIM.PG_AwardBodyID,
	SSA1 = ER.PG_SSA1ID,
	StudentRef = ER.PG_StudentID,
	StudentName = STU.Surname + ', ' + STU.Forenames,
	Gender = ER.PG_SexID,
	EthnicityCode = ER.PG_EthnicityID,
	EthnicityName = ETH.Description,
	DiffDissCode = ER.PG_DifficultyOrDisabilityID,
	DiffDissName = DIF.ShortDescription,
	IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
	IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
	IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),
	FundModelCode = 'APP',
	FundModelName = 'Apprenticeship',
	IsEFAFunded = 0,
	IsAdvLearnLoanFunded = 0,
	IsStart = ER.WBStartTimely,
	IsLeaver = ER.WBTimelyLeave,
	LessonsExpected = ER.Att_Exp,
	LessonsAttended = ER.Att_Act,
	AttendPer = 
		ROUND (
			CASE
				WHEN ER.Att_Exp = 0 THEN 0
				ELSE CAST ( ER.Att_Act AS FLOAT )  CAST ( ER.Att_Exp AS FLOAT )
			END
		, 4 ),
	AttendTar = TAR.Attend,
	LessonsLate = ER.Att_Lat,
	PuncPer = 
		ROUND (
			CASE
				WHEN ER.Att_Act = 0 THEN 0
				ELSE 100 - CAST ( ER.Att_Lat AS FLOAT )  CAST ( ER.Att_Act AS FLOAT )
			END
		, 4 ),
	PuncTar = TAR.Punc,
	IsXfr = ER.WBXfr,
	IsCont = ER.WBContTimely,
	IsWdr = ER.WBLeave,
	IsWdrInQualifyingPeriod = ER.WBWithdrawnin6Wks,
	IsWdrAfterQualifyingPeriod = ER.WBWithdrawnAfter6wksTimely,
	IsOutOfFunding30 = 
		CASE
			WHEN ER.WBContinBeyondEndTimely = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) = 30 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding60 = 
		CASE
			WHEN ER.WBContinBeyondEndTimely = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsOutOfFunding90 = 
		CASE
			WHEN ER.WBContinBeyondEndTimely = 1 THEN
				CASE
					WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
					ELSE 0
				END
			ELSE 0
		END,
	IsComp = ER.WBRet - ER.WBContTimely,
	IsRetInYr = 
		CASE
			WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
			ELSE ER.WBRet
		END,
	IsRet = 
		CASE
			WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
			ELSE ER.WBRet
		END,
	IsAch = ER.WBAchFrameTimelyLSCExclude,
	IsPassAToC = 0
FROM ussql01.ProAchieve.dbo.vER_Summary_Apprenticeships ER
INNER JOIN ussql01.ProAchieve.dbo.vER_MYS_RDS_Seln MYS
	ON MYS.ER_MYSID = ER.ER_MYSID
	AND MYS.IsArchived = 0
	--AND MYS.DefaultSummary = 1
INNER JOIN ussql01.ProAchieve.dbo.PG_Student STU
	ON STU.PG_StudentID = ER.PG_StudentID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
	ON AIM.GN_AimID = ER.PG_AimID
INNER JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE 
	ON AGE.PG_AgeLSCID = ER.PG_AgeLSCID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHD
	ON ETHD.PG_EthnicGroupID = ER.PG_EthnicGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHDS 
	ON ETHDS.PG_EthnicGroupSimpleID = ETHD.PG_EthnicGroupSimpleID
INNER JOIN ussql01.ProGeneral.dbo.Ethnicity ETH
	ON ETH.EthnicityID = ER.PG_EthnicityID
INNER JOIN ussql01.ProAchieve.dbo.WB_Duration DUR 
	ON DUR.WB_DurationID = ER.WB_DurationID
INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
	ON SSA1.SSA_Tier1_code = ER.PG_SSA1ID
INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
	ON SSA2.SSA_Tier2_code = ER.PG_SSA2ID
INNER JOIN ussql01.ProAchieve.dbo.PG_ProgType PT
	ON PT.PG_ProgTypeID = ER.PG_ProgTypeID
INNER JOIN (
	SELECT
		TAR.Attend,
		TAR.Punc
	FROM (
		SELECT
			TargetType = 'Attend',
			TargetValue = 90

		UNION ALL

		SELECT
			TargetType = 'Punc',
			TargetValue = 90
	) T
	PIVOT (
		SUM ( T.TargetValue )
		FOR
			T.TargetType IN ( [Attend], [Punc] )
	) AS TAR
) TAR
	ON 1 = 1
LEFT JOIN ussql01.ProGeneral.dbo.AimRef_1718_LearnAimRefType AIMT 
	ON AIMT.LearnAimRefType = ER.PG_QType1ID
LEFT JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
	ON QS.PG_QualSizeID = ER.PG_QualSizeID
LEFT JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
	ON MINS.PG_QualSizeID = ER.PG_QualSizeID
LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
	ON FAM.PG_StudentID = ER.PG_StudentID
	AND FAM.PG_ProviderID = ER.PG_ProviderID
	AND FAM.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
	ON NVQ.PG_NVQLevelCPRID = ER.PG_NVQLevelID
LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
	ON NVQG.NVQLevelGroupID = ER.PG_NVQLevelGroupID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
	ON DIV.GN_Structure1IYID = ER.PG_Structure1ID
	AND DIV.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
	ON SUBDIV.GN_Structure2IYID = ER.PG_Structure2ID
	AND SUBDIV.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
	ON CC.GN_Structure3IYID = ER.PG_Structure3ID
	AND CC.PG_AcademicYearID = ER.PG_ExpEndYrID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure4IY GRP
	ON GRP.GN_Structure4IYID = ER.PG_Structure4ID
	AND GRP.PG_AcademicYearID = ER.PG_ExpEndYrID
--LEFT JOIN ProAchieve.dbo.GN_CourseStructureIY CRS 
--	ON CRS.PG_CourseID = ER.PG_AggCourseID
--	AND CRS.PG_AcademicYearID = ER.PG_HybridEndYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
	ON CRS.PG_AggCourseID = ER.PG_AggCourseID
LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
	ON DIF.DifficultyOrDisabilityID = ER.PG_DifficultyOrDisabilityID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Timely NR 
	ON NR.PG_ExpEndYrID = (
		SELECT
			MAX ( NR2.PG_ExpEndYrID )
		FROM ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Timely NR2
		WHERE
			NR2.PG_CollegeTypeID = 2
	)
	AND NR.PG_CollegeTypeID = 2
	AND NR.PG_WBLFundAgeGroupID IS NULL
	AND NR.PG_FrameworkID = ER.PG_FrameworkID
	AND NR.PG_ProgTypeID IS NULL
	AND NR.PG_SSA1ID IS NULL
	AND NR.PG_SSA2ID IS NULL
LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
	ON ATT.StudentID = ER.PG_StudentID
	AND ATT.CollegeID = ER.PG_ProviderID
	AND ATT.AcademicYearID = ER.PG_ExpEndYrID
	AND ATT.SequenceNo = ER.SequenceNo
LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
	ON LAC.StudentID = ER.PG_StudentID
	AND LAC.CollegeID = ER.PG_ProviderID
	AND LAC.AcademicYearID = ER.PG_ExpEndYrID
WHERE
	ER.PG_ExpEndYrID = @AcademicYear
	AND MYS.LastAcademicYearID = @AcademicYear

UNION ALL

SELECT
	EndYear = HE.PG_HybridEndYearID,
	SummaryType = 'HE_Overall',
	DefaultSummary = MYS.DefaultSummary,
	ProviderID = MYS.PG_ProviderID,
	ProviderName = MYS.PG_ProviderName,
	Summary = MYS.Description,
	SummaryStatus = MYS.Status,
	AcademicYears = MYS.HE_MYSName,
	NumYears = 0,
	LastAcademicYear = MYS.LastAcademicYearID,
	RulesApplied = MYS.RulesApplied,
	LastUpdated = MYS.LastUpdated,
	DivisionCode = HE.PG_Structure1ID,
	DivisionName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
	SubDivisionCode = HE.PG_Structure2ID,
	SubDivisionName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
	CostCentreCode = HE.PG_Structure3ID,
	CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
	CourseCode = CRS.PG_AggCourseID,
	CourseName = CRS.PG_AggCourseName,
	GroupCode = HE.EnrolmentUserDefined1,
	SequenceNo = HE.SequenceNo,
	AimRef = AIM.GN_AimID,
	AimName = AIM.GN_AimName,
	QualTypeCode = HE.PG_QualSizeID,
	QualTypeName = QS.PG_QualSizeName,
	EngOrMathsCode = 'X',
	EngOrMathsName = 'Neither',
	NVQLevelCode = NVQ.PG_NVQLevelCPRID,
	NVQLevelName = NVQ.PG_NVQLevelCPRName,
	NVQLevelGrpCode = NULL,
	NVQLevelGrpName = NULL,
	AimType = NULL,
	AwardBody = AIM.PG_AwardBodyID,
	SSA1 = HE.PG_SSA1ID,
	StudentRef = HE.PG_StudentID,
	StudentName = HE.StudentName,
	Gender = HE.PG_SexID,
	EthnicityCode = HE.PG_EthnicityID,
	EthnicityName = ETH.Description,
	DiffDissCode = HE.PG_DifficultyOrDisabilityID,
	DiffDissName = DIF.ShortDescription,
	IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
	IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
	IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),
	FundModelCode = 'HE',
	FundModelName = 'Higher Education',
	IsEFAFunded = 0,
	IsAdvLearnLoanFunded = 0,
	IsStart = HE.P_Count_OverallQSRExclude,
	IsLeaver = HE.P_Count_OverallQSRExclude,
	LessonsExpected = HE.Att_Exp,
	LessonsAttended = HE.Att_Act,
	AttendPer = 
		ROUND (
			CASE
				WHEN HE.Att_Exp = 0 THEN 0
				ELSE CAST ( HE.Att_Act AS FLOAT )  CAST ( HE.Att_Exp AS FLOAT )
			END
		, 4 ),
	AttendTar = TAR.Attend,
	LessonsLate = ATT.TotalLates,
	PuncPer = 
		ROUND (
			CASE
				WHEN HE.Att_Act = 0 THEN 0
				ELSE 100 - CAST ( ATT.TotalLates AS FLOAT )  CAST ( HE.Att_Act AS FLOAT )
			END
		, 4 ),
	PuncTar = TAR.Punc,
	IsXfr = HE.PVXfr,
	IsCont = HE.PVCont,
	IsWdr = HE.PVWithdrawn + HE.PVWithdrawn1stNov,
	IsWdrInQualifyingPeriod = HE.PVWithdrawn,
	IsWdrAfterQualifyingPeriod = HE.PVWithdrawn1stNov,
	OutOfFunding30 = 0,
	OutOfFunding60 = 0,
	OutOfFunding90 = 0,
	IsComp = HE.P_Complete_OverallQSRExclude,
	IsRetInYr = HE.PVCont + HE.P_Complete_OverallQSRExclude,
	IsRet = HE.PVCont + HE.P_Complete_OverallQSRExclude,
	IsAch = HE.P_Ach_OverallQSRExclude,
	IsPassAToC = 0
FROM ussql01.ProAchieve.dbo.HE_MYS_Low HE
INNER JOIN ussql01.ProAchieve.dbo.vHE_MYS_RDS_Seln MYS 
	ON MYS.HE_MYSID = HE.HE_MYSID
	AND MYS.PG_ProviderID = HE.PG_ProviderID
	--AND MYS.DefaultSummary = 1 --Remove to include all colleges in group
	AND MYS.IsArchived = 0
	--AND MYS.RulesApplied = 1
LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
	ON AIM.GN_AimID = HE.PG_AimID
INNER JOIN ussql01.ProAchieve.dbo.HE_AgeGroup AGE 
	ON AGE.HE_AgeGroupID = HE.HE_AgeGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHD
	ON ETHD.PG_EthnicGroupID = HE.PG_EthnicGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHDS 
	ON ETHDS.PG_EthnicGroupSimpleID = ETHD.PG_EthnicGroupSimpleID
INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DUR 
	ON DUR.PG_DurationGroupID = HE.PG_DurationGroupID
INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
	ON SSA1.SSA_Tier1_code = HE.PG_SSA1ID
INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
	ON SSA2.SSA_Tier2_code = HE.PG_SSA2ID
INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
	ON QS.PG_QualSizeID = HE.PG_QualSizeID
INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
	ON MINS.PG_QualSizeID = HE.PG_QualSizeID
INNER JOIN (
	SELECT
		TAR.Attend,
		TAR.Punc
	FROM (
		SELECT
			TargetType = 'Attend',
			TargetValue = 90

		UNION ALL

		SELECT
			TargetType = 'Punc',
			TargetValue = 90
	) T
	PIVOT (
		SUM ( T.TargetValue )
		FOR
			T.TargetType IN ( [Attend], [Punc] )
	) AS TAR
) TAR
	ON 1 = 1
LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
	ON FAM.PG_StudentID = HE.PG_StudentID
	AND FAM.PG_ProviderID = HE.PG_ProviderID
	AND FAM.PG_AcademicYearID = HE.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
	ON NVQ.PG_NVQLevelCPRID = HE.PG_NVQLevelID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
	ON DIV.GN_Structure1IYID = HE.PG_Structure1ID
	AND DIV.PG_AcademicYearID = HE.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
	ON SUBDIV.GN_Structure2IYID = HE.PG_Structure2ID
	AND SUBDIV.PG_AcademicYearID = HE.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
	ON CC.GN_Structure3IYID = HE.PG_Structure3ID
	AND CC.PG_AcademicYearID = HE.PG_AcademicYearID
--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
--	ON CRS.PG_CourseID = HE.PG_AggCourseID
--	AND CRS.PG_AcademicYearID = HE.PG_HybridEndYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
	ON CRS.PG_AggCourseID = HE.PG_AggCourseID
LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
	ON DIF.DifficultyOrDisabilityID = HE.PG_DifficultyOrDisabilityID
LEFT JOIN ussql01.ProGeneral.dbo.Ethnicity ETH
	ON ETH.EthnicityID = HE.PG_EthnicityID
LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
	ON ATT.StudentID = HE.PG_StudentID
	AND ATT.CollegeID = HE.PG_ProviderID
	AND ATT.AcademicYearID = HE.PG_AcademicYearID
LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
	ON LAC.StudentID = HE.PG_StudentID
	AND LAC.CollegeID = HE.PG_ProviderID
	AND LAC.AcademicYearID = HE.PG_AcademicYearID
	AND ATT.SequenceNo = HE.SequenceNo
WHERE 
	HE.PG_HybridEndYearID = @AcademicYear
	AND MYS.LastAcademicYearID = @AcademicYear

UNION ALL

SELECT
	EndYear = HE.PG_ExpEndYrID,
	SummaryType = 'HE_Timely',
	DefaultSummary = MYS.DefaultSummary,
	ProviderID = MYS.PG_ProviderID,
	ProviderName = MYS.PG_ProviderName,
	Summary = MYS.Description,
	SummaryStatus = MYS.Status,
	AcademicYears = MYS.HE_MYSName,
	NumYears = 0,
	LastAcademicYear = MYS.LastAcademicYearID,
	RulesApplied = MYS.RulesApplied,
	LastUpdated = MYS.LastUpdated,
	DivisionCode = HE.PG_Structure1ID,
	DivisionName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
	SubDivisionCode = HE.PG_Structure2ID,
	SubDivisionName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
	CostCentreCode = HE.PG_Structure3ID,
	CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
	CourseCode = CRS.PG_AggCourseID,
	CourseName = CRS.PG_AggCourseName,
	GroupCode = HE.EnrolmentUserDefined1,
	SequenceNo = HE.SequenceNo,
	AimRef = AIM.GN_AimID,
	AimName = AIM.GN_AimName,
	QualTypeCode = HE.PG_QualSizeID,
	QualTypeName = QS.PG_QualSizeName,
	EngOrMathsCode = 'X',
	EngOrMathsName = 'Neither',
	NVQLevelCode = NVQ.PG_NVQLevelCPRID,
	NVQLevelName = NVQ.PG_NVQLevelCPRName,
	NVQLevelGrpCode = NULL,
	NVQLevelGrpName = NULL,
	AimType = NULL,
	AwardBody = AIM.PG_AwardBodyID,
	SSA1 = HE.PG_SSA1ID,
	StudentRef = HE.PG_StudentID,
	StudentName = HE.StudentName,
	Gender = HE.PG_SexID,
	EthnicityCode = HE.PG_EthnicityID,
	EthnicityName = ETH.Description,
	DiffDissCode = HE.PG_DifficultyOrDisabilityID,
	DiffDissName = DIF.ShortDescription,
	IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
	IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
	IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),
	FundModelCode = 'HE',
	FundModelName = 'Higher Education',
	IsEFAFunded = 0,
	IsAdvLearnLoanFunded = 0,
	IsStart = HE.P_Count_TimelyQSRExclude,
	IsLeaver = HE.P_Count_TimelyQSRExclude,
	LessonsExpected = HE.Att_Exp,
	LessonsAttended = HE.Att_Act,
	AttendPer = 
		ROUND (
			CASE
				WHEN HE.Att_Exp = 0 THEN 0
				ELSE CAST ( HE.Att_Act AS FLOAT )  CAST ( HE.Att_Exp AS FLOAT )
			END
		, 4 ),
	AttendTar = TAR.Attend,
	LessonsLate = ATT.TotalLates,
	PuncPer = 
		ROUND (
			CASE
				WHEN HE.Att_Act = 0 THEN 0
				ELSE 100 - CAST ( ATT.TotalLates AS FLOAT )  CAST ( HE.Att_Act AS FLOAT )
			END
		, 4 ),
	PuncTar = TAR.Punc,
	IsXfr = HE.PVXfr,
	IsCont = HE.PVCont,
	IsWdr = HE.PVWithdrawn + HE.PVWithdrawn1stNov,
	IsWdrInQualifyingPeriod = HE.PVWithdrawn,
	IsWdrAfterQualifyingPeriod = HE.PVWithdrawn1stNov,
	OutOfFunding30 = 0,
	OutOfFunding60 = 0,
	OutOfFunding90 = 0,
	IsComp = HE.P_Complete_TimelyQSRExclude,
	IsRetInYr = HE.PVCont + HE.P_Complete_TimelyQSRExclude,
	IsRet = HE.PVCont + HE.P_Complete_TimelyQSRExclude,
	IsAch = HE.P_Ach_TimelyQSRExclude,
	IsPassAToC = 0
FROM ussql01.ProAchieve.dbo.HE_MYS_Low HE
INNER JOIN ussql01.ProAchieve.dbo.vHE_MYS_RDS_Seln MYS 
	ON MYS.HE_MYSID = HE.HE_MYSID
	AND MYS.PG_ProviderID = HE.PG_ProviderID
	--AND MYS.DefaultSummary = 1 --Remove to include all colleges in group
	AND MYS.IsArchived = 0
	--AND MYS.RulesApplied = 1
LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
	ON AIM.GN_AimID = HE.PG_AimID
INNER JOIN ussql01.ProAchieve.dbo.HE_AgeGroup AGE 
	ON AGE.HE_AgeGroupID = HE.HE_AgeGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHD
	ON ETHD.PG_EthnicGroupID = HE.PG_EthnicGroupID
INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHDS 
	ON ETHDS.PG_EthnicGroupSimpleID = ETHD.PG_EthnicGroupSimpleID
INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DUR 
	ON DUR.PG_DurationGroupID = HE.PG_DurationGroupID
INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
	ON SSA1.SSA_Tier1_code = HE.PG_SSA1ID
INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
	ON SSA2.SSA_Tier2_code = HE.PG_SSA2ID
INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
	ON QS.PG_QualSizeID = HE.PG_QualSizeID
INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
	ON MINS.PG_QualSizeID = HE.PG_QualSizeID
INNER JOIN (
	SELECT
		TAR.Attend,
		TAR.Punc
	FROM (
		SELECT
			TargetType = 'Attend',
			TargetValue = 90

		UNION ALL

		SELECT
			TargetType = 'Punc',
			TargetValue = 90
	) T
	PIVOT (
		SUM ( T.TargetValue )
		FOR
			T.TargetType IN ( [Attend], [Punc] )
	) AS TAR
) TAR
	ON 1 = 1
LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
	ON FAM.PG_StudentID = HE.PG_StudentID
	AND FAM.PG_ProviderID = HE.PG_ProviderID
	AND FAM.PG_AcademicYearID = HE.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
	ON NVQ.PG_NVQLevelCPRID = HE.PG_NVQLevelID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
	ON DIV.GN_Structure1IYID = HE.PG_Structure1ID
	AND DIV.PG_AcademicYearID = HE.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
	ON SUBDIV.GN_Structure2IYID = HE.PG_Structure2ID
	AND SUBDIV.PG_AcademicYearID = HE.PG_AcademicYearID
LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
	ON CC.GN_Structure3IYID = HE.PG_Structure3ID
	AND CC.PG_AcademicYearID = HE.PG_AcademicYearID
--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
--	ON CRS.PG_CourseID = HE.PG_AggCourseID
--	AND CRS.PG_AcademicYearID = HE.PG_HybridEndYearID
LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
	ON CRS.PG_AggCourseID = HE.PG_AggCourseID
LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
	ON DIF.DifficultyOrDisabilityID = HE.PG_DifficultyOrDisabilityID
LEFT JOIN ussql01.ProGeneral.dbo.Ethnicity ETH
	ON ETH.EthnicityID = HE.PG_EthnicityID
LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
	ON ATT.StudentID = HE.PG_StudentID
	AND ATT.CollegeID = HE.PG_ProviderID
	AND ATT.AcademicYearID = HE.PG_AcademicYearID
	AND ATT.SequenceNo = HE.SequenceNo
LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
	ON LAC.StudentID = HE.PG_StudentID
	AND LAC.CollegeID = HE.PG_ProviderID
	AND LAC.AcademicYearID = HE.PG_AcademicYearID
WHERE 
	HE.PG_ExpEndYrID = @AcademicYear
	AND MYS.LastAcademicYearID = @AcademicYear

ORDER BY
	EndYear,
	SummaryType,
	ProviderID,
	DivisionCode,
	SubDivisionCode,
	CostCentreCode,
	CourseCode,
	AimRef,
	StudentName,
	StudentRef