
		SELECT
			EndYear = CL.PG_HybridEndYearID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType = 'CL_Overall_RulesApplied',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = AGE.PG_AgeLSCName,
			EthnicCode = CL.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
					WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
					WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
					ELSE 'X'
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
					WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
					WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
					ELSE '-- Unknown --'
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartOverall,
			IsLeaver = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont
				END,
			IsWdr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END
				END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END
				END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_OverallQSRExclude,
			IsRetInYr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont + CL.P_Complete_OverallQSRExclude
				END,
			IsRet = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			IsAch = CL.P_Ach_OverallQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Overall,
			
			NatRate_Yr_Leave = NR.BM_Count_Overall,
			NatRate_Yr_Ach = NR.BM_AchCount_Overall,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
				END,
			NatRate_QualSize_Leave = NR_QS.Leave,
			NatRate_QualSize_Ach = NR_QS.Ach,
			NatRate_QualSize_AchPer = NR_QS.AchPer,
			NatRate_Yr_Leave = NR.BM_Count_Overall,
			NatRate_Yr_Ach = NR.BM_AchCount_Overall,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
				END
	

		FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
		INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
			AND MYS.PG_ProviderID = CL.PG_ProviderID
			AND MYS.DefaultSummary = 1
			AND MYS.IsArchived = 0
			AND MYS.IsQSRSummary = 0
			AND MYS.RulesApplied = 1
			AND MYS.IncludeAllAimTypes = 0
		INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID
	

		LEFT JOIN (
			SELECT
				PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 2
		) NR_L
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 2
			AND NR.PG_AimID = CL.PG_AimID
			AND NR.PG_MapID IS NULL
			AND NR.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				LatestYear = LAT.PG_HybridEndYearID,
				Leave = SUM ( NR.BM_Count_Overall ),
				Ach = SUM ( NR.BM_Ach_Overall ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
					END
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Overall NR
			INNER JOIN (
				SELECT
					PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Overall NR
				WHERE
					NR.PG_CollegeTypeID = 2
			) LAT
				ON 1 = 1
			WHERE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				LAT.PG_HybridEndYearID
		) NR_QS
			ON 
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_QS.LatestYear THEN
						CASE
							WHEN NR_QS.PG_HybridEndYearID = NR_QS.LatestYear THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_QS.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID

		WHERE 
			CL.PG_HybridEndYearID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = CL.PG_ExpEndYrID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType = 'CL_Timely_RulesApplied',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = AGE.PG_AgeLSCName,
			EthnicCode = CL.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
					WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
					WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
					ELSE 'X'
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
					WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
					WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
					ELSE '-- Unknown --'
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartTimely,
			IsLeaver = CL.P_Count_TimelyQSRExclude,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = CL.PVCont,
			IsWdr = CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_TimelyQSRExclude,
			IsRetInYr = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsRet = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsAch = CL.P_Ach_TimelyQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Timely,

			NatRate_Yr_Leave = NR.BM_Count_Timely,
			NatRate_Yr_Ach = NR.BM_AchCount_Timely,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
				END,
			NatRate_QualSize_Leave = NR_QS.Leave,
			NatRate_QualSize_Ach = NR_QS.Ach,
			NatRate_QualSize_AchPer = NR_QS.AchPer,
			NatRate_Yr_Leave = NR.BM_Count_Timely,
			NatRate_Yr_Ach = NR.BM_AchCount_Timely,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
				END
	

		FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
		INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
			AND MYS.PG_ProviderID = CL.PG_ProviderID
			AND MYS.DefaultSummary = 1
			AND MYS.IsArchived = 0
			AND MYS.IsQSRSummary = 0
			AND MYS.RulesApplied = 1
			AND MYS.IncludeAllAimTypes = 0
		INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID

	

		LEFT JOIN (
			SELECT
				PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 2
		) NR_L
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 2
			AND NR.PG_AimID = CL.PG_AimID
			AND NR.PG_MapID IS NULL
			AND NR.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				LatestYear = LAT.PG_ExpEndYrID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Timely NR
			INNER JOIN (
				SELECT
					PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Timely NR
				WHERE
					NR.PG_CollegeTypeID = 2
			) LAT
				ON 1 = 1
			WHERE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				LAT.PG_ExpEndYrID
		) NR_QS
			ON 
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_QS.LatestYear THEN
						CASE
							WHEN NR_QS.PG_ExpEndYrID = NR_QS.LatestYear THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_QS.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID

		WHERE 
			CL.PG_ExpEndYrID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = CL.PG_HybridEndYearID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType = 'CL_Overall_AllAims',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = AGE.PG_AgeLSCName,
			EthnicCode = CL.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
					WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
					WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
					ELSE 'X'
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
					WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
					WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
					ELSE '-- Unknown --'
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartOverall,
			IsLeaver = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont
				END,
			IsWdr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END
				END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END
				END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_OverallQSRExclude,
			IsRetInYr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont + CL.P_Complete_OverallQSRExclude
				END,
			IsRet = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			IsAch = CL.P_Ach_OverallQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Overall,

			NatRate_Yr_Leave = NR.BM_Count_Overall,
			NatRate_Yr_Ach = NR.BM_AchCount_Overall,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
				END,
			NatRate_QualSize_Leave = NR_QS.Leave,
			NatRate_QualSize_Ach = NR_QS.Ach,
			NatRate_QualSize_AchPer = NR_QS.AchPer,
			NatRate_Yr_Leave = NR.BM_Count_Overall,
			NatRate_Yr_Ach = NR.BM_AchCount_Overall,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
				END
	

		FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
		INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
			AND MYS.PG_ProviderID = CL.PG_ProviderID
			AND MYS.DefaultSummary = 0
			AND MYS.IsArchived = 0
			AND MYS.IsQSRSummary = 0
			AND MYS.RulesApplied = 0
			AND MYS.IncludeAllAimTypes = 1
		INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID
	

		LEFT JOIN (
			SELECT
				PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 2
		) NR_L
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 2
			AND NR.PG_AimID = CL.PG_AimID
			AND NR.PG_MapID IS NULL
			AND NR.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				LatestYear = LAT.PG_HybridEndYearID,
				Leave = SUM ( NR.BM_Count_Overall ),
				Ach = SUM ( NR.BM_Ach_Overall ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
					END
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Overall NR
			INNER JOIN (
				SELECT
					PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Overall NR
				WHERE
					NR.PG_CollegeTypeID = 2
			) LAT
				ON 1 = 1
			WHERE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				LAT.PG_HybridEndYearID
		) NR_QS
			ON 
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_QS.LatestYear THEN
						CASE
							WHEN NR_QS.PG_HybridEndYearID = NR_QS.LatestYear THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_QS.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID

		WHERE 
			CL.PG_HybridEndYearID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = CL.PG_ExpEndYrID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType = 'CL_Timely_AllAims',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = AGE.PG_AgeLSCName,
			EthnicCode = CL.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
					WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
					WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
					ELSE 'X'
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
					WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
					WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
					ELSE '-- Unknown --'
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartTimely,
			IsLeaver = CL.P_Count_TimelyQSRExclude,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = CL.PVCont,
			IsWdr = CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_TimelyQSRExclude,
			IsRetInYr = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsRet = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsAch = CL.P_Ach_TimelyQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Timely,

			NatRate_Yr_Leave = NR.BM_Count_Timely,
			NatRate_Yr_Ach = NR.BM_AchCount_Timely,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
				END,
			NatRate_QualSize_Leave = NR_QS.Leave,
			NatRate_QualSize_Ach = NR_QS.Ach,
			NatRate_QualSize_AchPer = NR_QS.AchPer,
			NatRate_Yr_Leave = NR.BM_Count_Timely,
			NatRate_Yr_Ach = NR.BM_AchCount_Timely,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
				END
	

		FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
		INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
			AND MYS.PG_ProviderID = CL.PG_ProviderID
			AND MYS.DefaultSummary = 0
			AND MYS.IsArchived = 0
			AND MYS.IsQSRSummary = 0
			AND MYS.RulesApplied = 0
			AND MYS.IncludeAllAimTypes = 1
		INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID
	

		LEFT JOIN (
			SELECT
				PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 2
		) NR_L
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 2
			AND NR.PG_AimID = CL.PG_AimID
			AND NR.PG_MapID IS NULL
			AND NR.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				LatestYear = LAT.PG_ExpEndYrID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Timely NR
			INNER JOIN (
				SELECT
					PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Timely NR
				WHERE
					NR.PG_CollegeTypeID = 2
			) LAT
				ON 1 = 1
			WHERE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				LAT.PG_ExpEndYrID
		) NR_QS
			ON 
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_QS.LatestYear THEN
						CASE
							WHEN NR_QS.PG_ExpEndYrID = NR_QS.LatestYear THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_QS.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID

		WHERE 
			CL.PG_ExpEndYrID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = CL.PG_HybridEndYearID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType = 'CL_Overall_QAR',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = AGE.PG_AgeLSCName,
			EthnicCode = CL.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
					WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
					WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
					ELSE 'X'
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
					WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
					WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
					ELSE '-- Unknown --'
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartOverall,
			IsLeaver = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont
				END,
			IsWdr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END
				END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END
				END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_OverallQSRExclude,
			IsRetInYr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont + CL.P_Complete_OverallQSRExclude
				END,
			IsRet = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			IsAch = CL.P_Ach_OverallQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Overall,

			NatRate_Yr_Leave = NR.BM_Count_Overall,
			NatRate_Yr_Ach = NR.BM_AchCount_Overall,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
				END,
			NatRate_QualSize_Leave = NR_QS.Leave,
			NatRate_QualSize_Ach = NR_QS.Ach,
			NatRate_QualSize_AchPer = NR_QS.AchPer,
			NatRate_Yr_Leave = NR.BM_Count_Overall,
			NatRate_Yr_Ach = NR.BM_AchCount_Overall,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
				END
	

		FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
		INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
			AND MYS.PG_ProviderID = CL.PG_ProviderID
			AND MYS.DefaultSummary = 0
			AND MYS.IsArchived = 0
			AND MYS.IsQSRSummary = 1
		INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID
	

		LEFT JOIN (
			SELECT
				PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 2
		) NR_L
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Overall NR
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 2
			AND NR.PG_AimID = CL.PG_AimID
			AND NR.PG_MapID IS NULL
			AND NR.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				LatestYear = LAT.PG_HybridEndYearID,
				Leave = SUM ( NR.BM_Count_Overall ),
				Ach = SUM ( NR.BM_Ach_Overall ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Overall ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Overall ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Overall ) AS FLOAT ), 4 )
					END
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Overall NR
			INNER JOIN (
				SELECT
					PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Overall NR
				WHERE
					NR.PG_CollegeTypeID = 2
			) LAT
				ON 1 = 1
			WHERE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				LAT.PG_HybridEndYearID
		) NR_QS
			ON 
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_QS.LatestYear THEN
						CASE
							WHEN NR_QS.PG_HybridEndYearID = NR_QS.LatestYear THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_QS.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID

		WHERE 
			CL.PG_HybridEndYearID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = CL.PG_ExpEndYrID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType = 'CL_Timely_QAR',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = AGE.PG_AgeLSCName,
			EthnicCode = CL.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, 'X' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, 'Neither' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '1619'
					WHEN CL.FundType = 'Adult skills' THEN 'ADULT'
					WHEN CL.FundType = '24+ Loan' THEN 'LOAN'
					ELSE 'X'
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = '16-19 (excluding Apprenticeships)' THEN '16-19 Funded'
					WHEN CL.FundType = 'Adult skills' THEN 'Adult Funded'
					WHEN CL.FundType = '24+ Loan' THEN 'Loan Funded'
					ELSE '-- Unknown --'
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = 'Y' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartTimely,
			IsLeaver = CL.P_Count_TimelyQSRExclude,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = CL.PVCont,
			IsWdr = CASE WHEN CL.IsWithdrawnAll = 'Y' THEN 1 ELSE 0 END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = CASE WHEN CL.IsWithdrawnAfterQualPeriod = 'Y' THEN 1 ELSE 0 END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_TimelyQSRExclude,
			IsRetInYr = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsRet = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsAch = CL.P_Ach_TimelyQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Timely,

			NatRate_Yr_Leave = NR.BM_Count_Timely,
			NatRate_Yr_Ach = NR.BM_AchCount_Timely,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
				END,
			NatRate_QualSize_Leave = NR_QS.Leave,
			NatRate_QualSize_Ach = NR_QS.Ach,
			NatRate_QualSize_AchPer = NR_QS.AchPer,
			NatRate_Yr_Leave = NR.BM_Count_Timely,
			NatRate_Yr_Ach = NR.BM_AchCount_Timely,
			NatRate_Yr_AchPer = 
				CASE
					WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
					ELSE 
						ROUND ( CAST ( SUM ( NR.BM_AchCount_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
				END
	

		FROM ussql01.ProAchieve.dbo.CL_Midpoint CL
		INNER JOIN ussql01.ProAchieve.dbo.vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
			AND MYS.PG_ProviderID = CL.PG_ProviderID
			AND MYS.DefaultSummary = 0
			AND MYS.IsArchived = 0
			AND MYS.IsQSRSummary = 1
		INNER JOIN ussql01.ProAchieve.dbo.PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID
	

		LEFT JOIN (
			SELECT
				PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 2
		) NR_L
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_CL_Qual_Timely NR
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 2
			AND NR.PG_AimID = CL.PG_AimID
			AND NR.PG_MapID IS NULL
			AND NR.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				LatestYear = LAT.PG_ExpEndYrID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Timely NR
			INNER JOIN (
				SELECT
					PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_CL_High_Timely NR
				WHERE
					NR.PG_CollegeTypeID = 2
			) LAT
				ON 1 = 1
			WHERE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				LAT.PG_ExpEndYrID
		) NR_QS
			ON 
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_QS.LatestYear THEN
						CASE
							WHEN NR_QS.PG_ExpEndYrID = NR_QS.LatestYear THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_QS.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID

		WHERE 
			CL.PG_ExpEndYrID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = ER.WB_HybridEndYearID,
			AcademicYear = AY.PG_AcademicYearID,
			SummaryType = 'ER_Overall',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.ER_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = ER.PG_StudentID,
			LearnerName = STU.Surname + ', ' + STU.Forenames,
			Gender = ER.PG_SexID,
			AgeGroup = AGE.PG_WBLFundAgeGroupName,
			EthnicCode = ER.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = ER.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = ER.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = ER.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = ER.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = ER.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = ER.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = ER.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = ER.PG_ProgTypeID,
			ProgTypeShortName = ER.PG_ProgTypeGroupShortName,
			ProgTypeName = ER.PG_ProgTypeName,
			FrameworkCode = ER.PG_FrameworkID,
			FrameworkName = ER.PG_FrameworkName,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = ER.EnrolmentUserDefined1,
			SequenceNo = ER.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = ER.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = ER.PG_ILRAimTypeID,
			AimTypeName = NULL,
			DurationCode = ER.WB_DurationID,
			DurationName = DUR.WB_DurationName,
			DurationGroupCode = NULL,
			DurationGroupName = NULL,
			DurationTypeCode = NULL,
			DurationTypeName = NULL,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = 'X',
			EngOrMathsName = 'Neither',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = NULL,

			FundModelCode = 'APP',
			FundModelName = 'Apprenticeship',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = ER.WBStartOverall,
			IsLeaver = ER.WBOverallLeave,
			LessonsExpected = ER.Att_Exp,
			LessonsAttended = ER.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN ER.Att_Exp = 0 THEN 0
						ELSE CAST ( ER.Att_Act AS FLOAT ) / CAST ( ER.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ER.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN ER.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ER.Att_Lat AS FLOAT ) / CAST ( ER.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = ER.WBXfr,
			IsCont = ER.WBContOverall,
			IsWdr = ER.WBLeave,
			IsWdrInQualifyingPeriod = ER.WBWithdrawnin6Wks,
			IsWdrAfterQualifyingPeriod = ER.WBWithdrawnAfter6wksOverall,
			IsOutOfFunding30 = 
				CASE
					WHEN ER.WBContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN ER.WBContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN ER.WBContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = ER.WBRet - ER.WBContOverall,
			IsRetInYr = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsRet = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsAch = ER.WBAchFrameOverallLSCExclude,
			IsPassAToC = 0,

			NatRate_Yr_Leave = NR.BMLeave,
			NatRate_Yr_Ach = NR.BMAchFrame,
			NatRate_Yr_AchPer = CAST ( NR.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_QualSize_Leave = NR.BMLeave,
			NatRate_QualSize_Ach = NR.BMAchFrame,
			NatRate_QualSize_AchPer = CAST ( NR.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_Aim_Leave = NR_FW.BMLeave,
			NatRate_Aim_Ach = NR_FW.BMAchFrame,
			NatRate_Aim_AchPer = CAST ( NR_FW.BMAchFrameOverallLeave AS FLOAT ) / 100.00
	

		FROM ussql01.ProAchieve.dbo.vER_Summary_Apprenticeships ER
		INNER JOIN ussql01.ProAchieve.dbo.PG_AcademicYear AY
			ON AY.AcademicYearNumber = ER.AcademicYearNumber
		INNER JOIN ussql01.ProAchieve.dbo.vER_MYS_RDS_Seln MYS
			ON MYS.ER_MYSID = ER.ER_MYSID
			AND MYS.IsArchived = 0
			AND MYS.DefaultSummary = 1
		INNER JOIN ussql01.ProAchieve.dbo.PG_Student STU
			ON STU.PG_StudentID = ER.PG_StudentID
			AND STU.PG_AcademicYearNumber = ER.AcademicYearNumber
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = ER.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = ER.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = ER.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = ER.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = ER.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.WB_Duration DUR
			ON DUR.WB_DurationID = ER.WB_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ProgType PT
			ON PT.PG_ProgTypeID = ER.PG_ProgTypeID
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_WBLFundAgeGroup AGE 
			ON AGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = ER.PG_QualSizeID
		LEFT JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = ER.PG_QualSizeID
			AND MINS.ThresholdID = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = ER.PG_StudentID
			AND FAM.PG_ProviderID = ER.PG_ProviderID
			AND FAM.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = ER.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = ER.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = ER.PG_Structure1ID
			AND DIV.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = ER.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = ER.PG_Structure3ID
			AND CC.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure4IY GRP
			ON GRP.GN_Structure4IYID = ER.PG_Structure4ID
			AND GRP.PG_AcademicYearID = ER.WB_HybridEndYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = ER.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = ER.PG_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = ER.PG_AggCourseID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = ER.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = ER.PG_StudentID
			AND ATT.CollegeID = ER.PG_ProviderID
			AND ATT.AcademicYearID = ER.WB_HybridEndYearID
			AND ATT.SequenceNo = ER.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = ER.PG_StudentID
			AND LAC.CollegeID = ER.PG_ProviderID
			AND LAC.AcademicYearID = ER.WB_HybridEndYearID
	

		LEFT JOIN (
				SELECT
					WB_HybridEndYearID = MAX ( NR.WB_HybridEndYearID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_APP_Demo_Overall NR
				WHERE
					NR.PG_CollegeTypeID = 0
			) NR_L
				ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_APP_Demo_Overall NR
			ON 
				CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 0
			AND NR.BMAchFrame = ER.PG_FrameworkID
			AND NR.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR.PG_SSA1ID = ER.PG_SSA1ID
			AND NR.PG_SSA2ID = ER.PG_SSA2ID
			AND NR.PG_SexID IS NULL
			AND NR.PG_LearningDifficultyID IS NULL
		
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Overall NR_FW 
			ON NR_FW.WB_HybridEndYearID = (
				SELECT
					MAX ( NR.WB_HybridEndYearID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Overall NR
				WHERE
					NR.PG_CollegeTypeID = 0
			)
			AND NR_FW.PG_CollegeTypeID = 0
			AND NR_FW.PG_WBLFundAgeGroupID IS NULL
			AND NR_FW.PG_FrameworkID = ER.PG_FrameworkID
			AND NR_FW.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_FW.PG_SSA1ID = ER.PG_SSA1ID
			AND NR_FW.PG_SSA2ID = ER.PG_SSA2ID

		WHERE
			ER.WB_HybridEndYearID = '18/19'
			--ND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = ER.PG_ExpEndYrID,
			AcademicYear = AY.PG_AcademicYearID,
			SummaryType = 'ER_Timely',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.ER_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = ER.PG_StudentID,
			LearnerName = STU.Surname + ', ' + STU.Forenames,
			Gender = ER.PG_SexID,
			AgeGroup = AGE.PG_WBLFundAgeGroupName,
			EthnicCode = ER.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = ER.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = ER.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = ER.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = ER.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = ER.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = ER.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = ER.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = ER.PG_ProgTypeID,
			ProgTypeShortName = ER.PG_ProgTypeGroupShortName,
			ProgTypeName = ER.PG_ProgTypeName,
			FrameworkCode = ER.PG_FrameworkID,
			FrameworkName = ER.PG_FrameworkName,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = ER.EnrolmentUserDefined1,
			SequenceNo = ER.SequenceNo,
			
			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = ER.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = ER.PG_ILRAimTypeID,
			AimTypeName = NULL,
			DurationCode = ER.WB_DurationID,
			DurationName = DUR.WB_DurationName,
			DurationGroupCode = NULL,
			DurationGroupName = NULL,
			DurationTypeCode = NULL,
			DurationTypeName = NULL,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = 'X',
			EngOrMathsName = 'Neither',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = NULL,

			FundModelCode = 'APP',
			FundModelName = 'Apprenticeship',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = ER.WBStartTimely,
			IsLeaver = ER.WBTimelyLeave,
			LessonsExpected = ER.Att_Exp,
			LessonsAttended = ER.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN ER.Att_Exp = 0 THEN 0
						ELSE CAST ( ER.Att_Act AS FLOAT ) / CAST ( ER.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ER.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN ER.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ER.Att_Lat AS FLOAT ) / CAST ( ER.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = ER.WBXfr,
			IsCont = ER.WBContTimely,
			IsWdr = ER.WBLeave,
			IsWdrInQualifyingPeriod = ER.WBWithdrawnin6Wks,
			IsWdrAfterQualifyingPeriod = ER.WBWithdrawnAfter6wksTimely,
			IsOutOfFunding30 = 
				CASE
					WHEN ER.WBContinBeyondEndTimely = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN ER.WBContinBeyondEndTimely = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN ER.WBContinBeyondEndTimely = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = ER.WBRet - ER.WBContTimely,
			IsRetInYr = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsRet = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsAch = ER.WBAchFrameTimelyLSCExclude,
			IsPassAToC = 0,

			NatRate_Yr_Leave = NR.BMLeave,
			NatRate_Yr_Ach = NR.BMAchFrameTimely,
			NatRate_Yr_AchPer = CAST ( NR.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_QualSize_Leave = NR.BMLeave,
			NatRate_QualSize_Ach = NR.BMAchFrameTimely,
			NatRate_QualSize_AchPer = CAST ( NR.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_Aim_Leave = NR_FW.BMLeave,
			NatRate_Aim_Ach = NR_FW.BMAchFrameTimely,
			NatRate_Aim_AchPer = CAST ( NR_FW.BMAchFrameTimelyLeave AS FLOAT ) / 100.00
	

		FROM ussql01.ProAchieve.dbo.vER_Summary_Apprenticeships ER
		INNER JOIN ussql01.ProAchieve.dbo.PG_AcademicYear AY
			ON AY.AcademicYearNumber = ER.AcademicYearNumber
		INNER JOIN ussql01.ProAchieve.dbo.vER_MYS_RDS_Seln MYS
			ON MYS.ER_MYSID = ER.ER_MYSID
			AND MYS.IsArchived = 0
			AND MYS.DefaultSummary = 1
		INNER JOIN ussql01.ProAchieve.dbo.PG_Student STU
			ON STU.PG_StudentID = ER.PG_StudentID
			AND STU.PG_AcademicYearNumber = ER.AcademicYearNumber
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = ER.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = ER.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = ER.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = ER.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = ER.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.WB_Duration DUR
			ON DUR.WB_DurationID = ER.WB_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_ProgType PT
			ON PT.PG_ProgTypeID = ER.PG_ProgTypeID
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_WBLFundAgeGroup AGE 
			ON AGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = ER.PG_QualSizeID
		LEFT JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = ER.PG_QualSizeID
			AND MINS.ThresholdID = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = ER.PG_StudentID
			AND FAM.PG_ProviderID = ER.PG_ProviderID
			AND FAM.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = ER.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = ER.PG_NVQLevelGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = ER.PG_Structure1ID
			AND DIV.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = ER.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = ER.PG_Structure3ID
			AND CC.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure4IY GRP
			ON GRP.GN_Structure4IYID = ER.PG_Structure4ID
			AND GRP.PG_AcademicYearID = ER.PG_ExpEndYrID
		--LEFT JOIN ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = ER.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = ER.PG_AggCourseID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = ER.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = ER.PG_StudentID
			AND ATT.CollegeID = ER.PG_ProviderID
			AND ATT.AcademicYearID = ER.PG_ExpEndYrID
			AND ATT.SequenceNo = ER.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = ER.PG_StudentID
			AND LAC.CollegeID = ER.PG_ProviderID
			AND LAC.AcademicYearID = ER.PG_ExpEndYrID
	

		LEFT JOIN (
				SELECT
					PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_APP_Demo_Timely NR
				WHERE
					NR.PG_CollegeTypeID = 0
			) NR_L
				ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_APP_Demo_Timely NR
			ON 
				CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR.PG_CollegeTypeID = 0
			AND NR.BMAchFrameTimely = ER.PG_FrameworkID
			AND NR.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR.PG_SSA1ID = ER.PG_SSA1ID
			AND NR.PG_SSA2ID = ER.PG_SSA2ID
			AND NR.PG_SexID IS NULL
			AND NR.PG_LearningDifficultyID IS NULL
		
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Timely NR_FW 
			ON NR_FW.PG_ExpEndYrID = (
				SELECT
					MAX ( NR.PG_ExpEndYrID )
				FROM ussql01.ProAchieve.dbo.PG_NationalRates_APP_Fwrk_Timely NR
				WHERE
					NR.PG_CollegeTypeID = 0
			)
			AND NR_FW.PG_CollegeTypeID = 0
			AND NR_FW.PG_WBLFundAgeGroupID IS NULL
			AND NR_FW.PG_FrameworkID = ER.PG_FrameworkID
			AND NR_FW.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_FW.PG_SSA1ID = ER.PG_SSA1ID
			AND NR_FW.PG_SSA2ID = ER.PG_SSA2ID

		WHERE
			ER.PG_ExpEndYrID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = HE.PG_HybridEndYearID,
			AcademicYear = HE.PG_AcademicYearID,
			SummaryType = 'HE_Overall',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.HE_MYSName,
			NumYears = 0,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = HE.PG_StudentID,
			LearnerName = HE.StudentName,
			Gender = HE.PG_SexID,
			AgeGroup = AGE.HE_AgeGroupName,
			EthnicCode = HE.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = HE.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = HE.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = HE.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = HE.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = HE.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = HE.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = HE.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = HE.EnrolmentUserDefined1,
			SequenceNo = HE.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = HE.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = NULL,
			AimTypeName = NULL,
			DurationCode = HE.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = HE.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = HE.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = 'X',
			EngOrMathsName = 'Neither',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NULL,
			NVQLevelGrpName = NULL,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = HE.PG_GradeID,

			FundModelCode = 'HE',
			FundModelName = 'Higher Education',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = HE.P_Count_OverallQSRExclude,
			IsLeaver = HE.P_Count_OverallQSRExclude,
			LessonsExpected = HE.Att_Exp,
			LessonsAttended = HE.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN HE.Att_Exp = 0 THEN 0
						ELSE CAST ( HE.Att_Act AS FLOAT ) / CAST ( HE.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ATT.TotalLates,
			PuncPer = 
				ROUND (
					CASE
						WHEN HE.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ATT.TotalLates AS FLOAT ) / CAST ( HE.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = HE.PVXfr,
			IsCont = HE.PVCont,
			IsWdr = HE.PVWithdrawn + HE.PVWithdrawn1stNov,
			IsWdrInQualifyingPeriod = HE.PVWithdrawn,
			IsWdrAfterQualifyingPeriod = HE.PVWithdrawn1stNov,
			OutOfFunding30 = 0,
			OutOfFunding60 = 0,
			OutOfFunding90 = 0,
			IsComp = HE.P_Complete_OverallQSRExclude,
			IsRetInYr = HE.PVCont + HE.P_Complete_OverallQSRExclude,
			IsRet = HE.PVCont + HE.P_Complete_OverallQSRExclude,
			IsAch = HE.P_Ach_OverallQSRExclude,
			IsPassAToC = 0,

			NatRate_Yr_Leave = NULL,
			NatRate_Yr_Ach = NULL,
			NatRate_Yr_AchPer = NULL,
			NatRate_QualSize_Leave = NULL,
			NatRate_QualSize_Ach = NULL,
			NatRate_QualSize_AchPer = NULL,
			NatRate_Aim_Leave = NULL,
			NatRate_Aim_Ach = NULL,
			NatRate_Aim_AchPer = NULL
	

		FROM ussql01.ProAchieve.dbo.HE_MYS_Low HE
		INNER JOIN ussql01.ProAchieve.dbo.vHE_MYS_RDS_Seln MYS 
			ON MYS.HE_MYSID = HE.HE_MYSID
			AND MYS.PG_ProviderID = HE.PG_ProviderID
			AND MYS.DefaultSummary = 1
			AND MYS.IsArchived = 0
			--AND MYS.RulesApplied = 1
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = HE.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = HE.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = HE.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = HE.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = HE.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = HE.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = HE.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = HE.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = HE.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = HE.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.HE_AgeGroup AGE 
			ON AGE.HE_AgeGroupID = HE.HE_AgeGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = HE.PG_StudentID
			AND FAM.PG_ProviderID = HE.PG_ProviderID
			AND FAM.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = HE.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = HE.PG_Structure1ID
			AND DIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = HE.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = HE.PG_Structure3ID
			AND CC.PG_AcademicYearID = HE.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = HE.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = HE.PG_HybridEndYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = HE.PG_AggCourseID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = HE.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = HE.PG_StudentID
			AND ATT.CollegeID = HE.PG_ProviderID
			AND ATT.AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = HE.PG_StudentID
			AND LAC.CollegeID = HE.PG_ProviderID
			AND LAC.AcademicYearID = HE.PG_AcademicYearID
			AND ATT.SequenceNo = HE.SequenceNo
	

		WHERE 
			HE.PG_HybridEndYearID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'
	

		UNION ALL

		SELECT
			EndYear = HE.PG_ExpEndYrID,
			AcademicYear = HE.PG_AcademicYearID,
			SummaryType = 'HE_Timely',
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.HE_MYSName,
			NumYears = 0,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = HE.PG_StudentID,
			LearnerName = HE.StudentName,
			Gender = HE.PG_SexID,
			AgeGroup = AGE.HE_AgeGroupName,
			EthnicCode = HE.PG_EthnicityID,
			EthnicName = ETH.PG_EthnicityName,
			EthnicGroupCode = HE.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = HE.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			IsLookedAfterChild = COALESCE ( LAC.UserDefinedStat1, 0 ),

			FacCode = HE.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, '-- Unknown --'),
			TeamCode = HE.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, '-- Unknown --'),
			CostCentreCode = HE.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, '-- Unknown --'),
			SSA1Code = HE.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = HE.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = HE.EnrolmentUserDefined1,
			SequenceNo = HE.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = HE.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = NULL,
			AimTypeName = NULL,
			DurationCode = HE.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = HE.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = HE.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = 'X',
			EngOrMathsName = 'Neither',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NULL,
			NVQLevelGrpName = NULL,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = HE.PG_GradeID,

			FundModelCode = 'HE',
			FundModelName = 'Higher Education',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = HE.P_Count_TimelyQSRExclude,
			IsLeaver = HE.P_Count_TimelyQSRExclude,
			LessonsExpected = HE.Att_Exp,
			LessonsAttended = HE.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN HE.Att_Exp = 0 THEN 0
						ELSE CAST ( HE.Att_Act AS FLOAT ) / CAST ( HE.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ATT.TotalLates,
			PuncPer = 
				ROUND (
					CASE
						WHEN HE.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ATT.TotalLates AS FLOAT ) / CAST ( HE.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = HE.PVXfr,
			IsCont = HE.PVCont,
			IsWdr = HE.PVWithdrawn + HE.PVWithdrawn1stNov,
			IsWdrInQualifyingPeriod = HE.PVWithdrawn,
			IsWdrAfterQualifyingPeriod = HE.PVWithdrawn1stNov,
			OutOfFunding30 = 0,
			OutOfFunding60 = 0,
			OutOfFunding90 = 0,
			IsComp = HE.P_Complete_TimelyQSRExclude,
			IsRetInYr = HE.PVCont + HE.P_Complete_TimelyQSRExclude,
			IsRet = HE.PVCont + HE.P_Complete_TimelyQSRExclude,
			IsAch = HE.P_Ach_TimelyQSRExclude,
			IsPassAToC = 0,

			NatRate_Yr_Leave = NULL,
			NatRate_Yr_Ach = NULL,
			NatRate_Yr_AchPer = NULL,
			NatRate_QualSize_Leave = NULL,
			NatRate_QualSize_Ach = NULL,
			NatRate_QualSize_AchPer = NULL,
			NatRate_Aim_Leave = NULL,
			NatRate_Aim_Ach = NULL,
			NatRate_Aim_AchPer = NULL
	

		FROM ussql01.ProAchieve.dbo.HE_MYS_Low HE
		INNER JOIN ussql01.ProAchieve.dbo.vHE_MYS_RDS_Seln MYS 
			ON MYS.HE_MYSID = HE.HE_MYSID
			AND MYS.PG_ProviderID = HE.PG_ProviderID
			AND MYS.DefaultSummary = 1
			AND MYS.IsArchived = 0
			--AND MYS.RulesApplied = 1
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Aim AIM 
			ON AIM.GN_AimID = HE.PG_AimID
		INNER JOIN ussql01.ProAchieve.dbo.PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = HE.PG_EthnicityID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = HE.PG_EthnicGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ussql01.ProGeneral.dbo.SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = HE.PG_SSA1ID
		INNER JOIN ussql01.ProGeneral.dbo.SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = HE.PG_SSA2ID
	

		INNER JOIN ussql01.ProAchieve.dbo.PG_Duration DUR
			ON DUR.PG_DurationID = HE.PG_DurationID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = HE.PG_DurationGroupID
		INNER JOIN ussql01.ProAchieve.dbo.PG_DurationType DURT
			ON DURT.PG_DurationTypeID = HE.PG_DurationTypeID
		INNER JOIN ussql01.ProAchieve.dbo.PG_QualSize QS
			ON QS.PG_QualSizeID = HE.PG_QualSizeID
		INNER JOIN ussql01.ProAchieve.dbo.PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = HE.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = 'Attend',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = 'Punc',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ussql01.ProAchieve.dbo.HE_AgeGroup AGE 
			ON AGE.HE_AgeGroupID = HE.HE_AgeGroupID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = HE.PG_StudentID
			AND FAM.PG_ProviderID = HE.PG_ProviderID
			AND FAM.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = HE.PG_NVQLevelID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = HE.PG_Structure1ID
			AND DIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = HE.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ussql01.ProAchieve.dbo.GN_Structure3IY CC
			ON CC.GN_Structure3IYID = HE.PG_Structure3ID
			AND CC.PG_AcademicYearID = HE.PG_AcademicYearID
		--LEFT JOIN ussql01.ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = HE.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = HE.PG_ExpEndYrID
		LEFT JOIN ussql01.ProAchieve.dbo.PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = HE.PG_AggCourseID
		LEFT JOIN ussql01.ProGeneral.dbo.DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = HE.PG_DifficultyOrDisabilityID
		LEFT JOIN ussql01.ProGeneral.dbo.Enrolment_Attendance ATT 
			ON ATT.StudentID = HE.PG_StudentID
			AND ATT.CollegeID = HE.PG_ProviderID
			AND ATT.AcademicYearID = HE.PG_AcademicYearID
			AND ATT.SequenceNo = HE.SequenceNo
		LEFT JOIN ussql01.ProGeneral.dbo.Student_UDF LAC
			ON LAC.StudentID = HE.PG_StudentID
			AND LAC.CollegeID = HE.PG_ProviderID
			AND LAC.AcademicYearID = HE.PG_AcademicYearID
	

		WHERE 
			HE.PG_ExpEndYrID = '18/19'
			--AND MYS.LastAcademicYearID = '18/19'

		ORDER BY
			EndYear,
			SummaryType,
			ProviderID,
			FacCode,
			TeamCode,
			CostCentreCode,
			CourseCode,
			AimRef,
			LearnerName,
			LearnerRef
