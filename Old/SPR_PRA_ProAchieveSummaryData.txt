ALTER PROCEDURE SPR_PRA_ProAchieveSummaryData
	@AcademicYear VARCHAR(5),
	@CollegeType INT,
	@ProGeneralDatabaseLocation VARCHAR(200),
	@ProAchieveDatabaseLocation VARCHAR(200)
AS
BEGIN
	SET NOCOUNT ON;

	--DECLARE @AcademicYear VARCHAR(7) = '18/19'
	--DECLARE @CollegeType INT = 2
	--DECLARE @ProGeneralDatabaseLocation VARCHAR(200) = 'ussql01.ProGeneral.dbo.'
	--DECLARE @ProAchieveDatabaseLocation VARCHAR(200) = 'ussql01.ProAchieve.dbo.'

	DECLARE @SQL1 VARCHAR(MAX);
	DECLARE @SQL2 VARCHAR(MAX);
	DECLARE @SQL3 VARCHAR(MAX);
	DECLARE @SQL4 VARCHAR(MAX);
	DECLARE @SQL5 VARCHAR(MAX);
	DECLARE @SQL6 VARCHAR(MAX);
	DECLARE @SQL7 VARCHAR(MAX);
	DECLARE @SQL8 VARCHAR(MAX);
	DECLARE @SQL9 VARCHAR(MAX);
	DECLARE @SQL10 VARCHAR(MAX);
	DECLARE @SQL11 VARCHAR(MAX);
	DECLARE @SQL12 VARCHAR(MAX);
	DECLARE @SQL13 VARCHAR(MAX);
	DECLARE @SQL14 VARCHAR(MAX);
	DECLARE @SQL15 VARCHAR(MAX);
	DECLARE @SQL16 VARCHAR(MAX);
	DECLARE @SQL17 VARCHAR(MAX);
	DECLARE @SQL18 VARCHAR(MAX);
	DECLARE @SQL19 VARCHAR(MAX);
	DECLARE @SQL20 VARCHAR(MAX);
	DECLARE @SQL21 VARCHAR(MAX);
	DECLARE @SQL22 VARCHAR(MAX);
	DECLARE @SQL23 VARCHAR(MAX);
	DECLARE @SQL24 VARCHAR(MAX);
	DECLARE @SQL25 VARCHAR(MAX);
	DECLARE @SQL26 VARCHAR(MAX);
	DECLARE @SQL27 VARCHAR(MAX);
	DECLARE @SQL28 VARCHAR(MAX);
	DECLARE @SQL29 VARCHAR(MAX);
	DECLARE @SQL30 VARCHAR(MAX);
	DECLARE @SQL31 VARCHAR(MAX);
	DECLARE @SQL32 VARCHAR(MAX);
	DECLARE @SQL33 VARCHAR(MAX);
	DECLARE @SQL34 VARCHAR(MAX);
	DECLARE @SQL35 VARCHAR(MAX);
	DECLARE @SQL36 VARCHAR(MAX);
    DECLARE @SQL37 VARCHAR(MAX);
    DECLARE @SQL38 VARCHAR(MAX);

	SET @SQL1 = '
		SELECT
			EndYear = CL.PG_HybridEndYearID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType =
                ''CL_Overall_''
                + CASE
                    WHEN 
                        MYS.DefaultSummary = 1
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 0
                        AND MYS.RulesApplied = 1
                        AND MYS.IncludeAllAimTypes = 0
                        THEN ''RulesApplied''
                    WHEN 
                        MYS.DefaultSummary = 0
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 0
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''AllAims''
                    WHEN 
                        MYS.DefaultSummary = 0
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 1
                        AND MYS.RulesApplied = 1
                        AND MYS.IncludeAllAimTypes = 0
                        THEN ''QAR''
                    ELSE ''ERROR''
                END,
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = REPLACE ( AGE.PG_AgeLSCName, '' '', '''' ),
			EthnicityCode = CL.PG_EthnicityID,
			EthnicityName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,

            IsALSRequired = CASE WHEN STU.UserDefined1 = ''Y'' THEN 1 ELSE 0 END,
            IsCareLeaver = CASE WHEN STU.UserDefined2 = ''Y'' THEN 1 ELSE 0 END,
            IsLookedAfter = CASE WHEN STU.UserDefined3 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungCarer = CASE WHEN STU.UserDefined4 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungParent = CASE WHEN STU.UserDefined5 = ''Y'' THEN 1 ELSE 0 END,

			CampusID = COALESCE ( STU.CampusID, ''-'' ),
			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, ''-- Unknown --''),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, ''-- Unknown --''),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, ''-- Unknown --''),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, ''X'' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, ''Neither'' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = ''16-19 (excluding Apprenticeships)'' THEN ''1619''
					WHEN CL.FundType = ''Adult skills'' THEN ''ADULT''
					WHEN CL.FundType = ''24+ Loan'' THEN ''LOAN''
					ELSE ''X''
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = ''16-19 (excluding Apprenticeships)'' THEN ''16-19 Funded''
					WHEN CL.FundType = ''Adult skills'' THEN ''Adult Funded''
					WHEN CL.FundType = ''24+ Loan'' THEN ''Loan Funded''
					ELSE ''-- Unknown --''
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = ''Y'' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartOverall,
			IsLeaver = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont
				END,
			IsWdr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAll = ''Y'' THEN 1 ELSE 0 END
				END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = ''Y'' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1
					ELSE 
						CASE WHEN CL.IsWithdrawnAfterQualPeriod = ''Y'' THEN 1 ELSE 0 END
				END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_OverallQSRExclude,
			IsRetInYr = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 0
					ELSE 
						CL.PVCont + CL.P_Complete_OverallQSRExclude
				END,
			IsRet = 
				CASE 
					WHEN 
						CL.CLOverdue = 1 
						AND CL.QSRExclude_Overall = 0 
						AND CL.P_Count_OverallQSRExclude = 0 
						THEN 1 
					ELSE 
						CL.P_Count_OverallQSRExclude 
				END,
			IsAch = CL.P_Ach_OverallQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Overall,
	'

	SET @SQL2 = '
			NatRate_Yr_Leave = NR_YR.Leave,
			NatRate_Yr_Ach = NR_YR.Ach,
			NatRate_Yr_AchPer = NR_YR.AchPer,
			NatRate_YrGFE_Leave = NR_YRG.Leave,
			NatRate_YrGFE_Ach = NR_YRG.Ach,
			NatRate_YrGFE_AchPer = NR_YRG.AchPer,
			NatRate_Aim_Leave = NR_AIM.BM_Count_Overall,
			NatRate_Aim_Ach = ROUND ( ( CAST ( NR_AIM.BM_Count_Overall AS FLOAT ) / 100 ) * NR_AIM.BM_AchCount_Overall, 0 ),
			NatRate_Aim_AchPer = NR_AIM.BM_AchCount_Overall,
			NatRate_FworkPTSSA_Leave = NULL,
			NatRate_FworkPTSSA_Ach = NULL,
			NatRate_FworkPTSSA_AchPer = NULL,
			NatRate_Age_Leave = NR_AGE.Leave,
			NatRate_Age_Ach = NR_AGE.Ach,
			NatRate_Age_AchPer = NR_AGE.AchPer,
			NatRate_AgeGender_Leave = NR_AGEGEN.Leave,
			NatRate_AgeGender_Ach = NR_AGEGEN.Ach,
			NatRate_AgeGender_AchPer = NR_AGEGEN.AchPer,
			NatRate_Level_Leave = NR_LEV.Leave,
			NatRate_Level_Ach = NR_LEV.Ach,
			NatRate_Level_AchPer = NR_LEV.AchPer,
            NatRate_LevelAge_Leave = NR_LEVAGE.Leave,
			NatRate_LevelAge_Ach = NR_LEVAGE.Ach,
			NatRate_LevelAge_AchPer = NR_LEVAGE.AchPer,
            NatRate_LevelGrp_Leave = NR_LEVG.Leave,
			NatRate_LevelGrp_Ach = NR_LEVG.Ach,
			NatRate_LevelGrp_AchPer = NR_LEVG.AchPer,
            NatRate_LevelGrpAge_Leave = NR_LEVGAGE.Leave,
			NatRate_LevelGrpAge_Ach = NR_LEVGAGE.Ach,
			NatRate_LevelGrpAge_AchPer = NR_LEVGAGE.AchPer,
			NatRate_QualType_Leave = NR_QS.Leave,
			NatRate_QualType_Ach = NR_QS.Ach,
			NatRate_QualType_AchPer = NR_QS.AchPer,
			NatRate_QualTypeAge_Leave = NR_QSAGE.Leave,
			NatRate_QualTypeAge_Ach = NR_QSAGE.Ach,
			NatRate_QualTypeAge_AchPer = NR_QSAGE.AchPer,
			NatRate_Ethnicity_Leave = NR_ETH.Leave,
			NatRate_Ethnicity_Ach = NR_ETH.Ach,
			NatRate_Ethnicity_AchPer = NR_ETH.AchPer,
            NatRate_EthnicityAge_Leave = NR_ETHAGE.Leave,
			NatRate_EthnicityAge_Ach = NR_ETHAGE.Ach,
			NatRate_EthnicityAge_AchPer = NR_ETHAGE.AchPer,
			NatRate_SSA1_Leave = NR_SSA1.Leave,
			NatRate_SSA1_Ach = NR_SSA1.Ach,
			NatRate_SSA1_AchPer = NR_SSA1.AchPer,
			NatRate_SSA2_Leave = NR_SSA2.Leave,
			NatRate_SSA2_Ach = NR_SSA2.Ach,
			NatRate_SSA2_AchPer = NR_SSA2.AchPer,
			NatRate_DifDis_Leave = NR_DIF.Leave,
			NatRate_DifDis_Ach = NR_DIF.Ach,
			NatRate_DifDis_AchPer = NR_DIF.AchPer,
            NatRate_DifDisAge_Leave = NR_DIFAGE.Leave,
			NatRate_DifDisAge_Ach = NR_DIFAGE.Ach,
			NatRate_DifDisAge_AchPer = NR_DIFAGE.AchPer
	'

	SET @SQL3 = '
		FROM ' + @ProAchieveDatabaseLocation + 'CL_Midpoint CL
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
            AND MYS.PG_ProviderID = CL.PG_ProviderID
            --AND MYS.DefaultSummary = 0
            AND MYS.IsArchived = 0
            --AND MYS.IsQSRSummary = 1
            --AND MYS.RulesApplied = 1
            --AND MYS.IncludeAllAimTypes = 0
            AND MYS.LastAcademicYearID = (
                SELECT 
                    MaxYear = MAX ( MYS2.LastAcademicYearID )
                FROM ' + @ProAchieveDatabaseLocation + 'vCL_MYS_RDS_Seln MYS2
                WHERE
                    MYS2.DefaultSummary = MYS.DefaultSummary
                    AND MYS2.IsArchived = MYS.IsArchived
                    AND MYS2.IsQSRSummary = MYS.IsQSRSummary
                    AND MYS2.RulesApplied = MYS.RulesApplied
                    AND MYS2.IncludeAllAimTypes = MYS.IncludeAllAimTypes
            )
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'Student STU
			ON STU.StudentID = CL.PG_StudentID
			AND STU.AcademicYearID = CL.PG_AcademicYearID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	'

	SET @SQL4 = '
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = ''Attend'',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = ''Punc'',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_HybridEndYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID
	'

	SET @SQL5 = '
		LEFT JOIN (
			SELECT
				PG_HybridEndYearID = MAX ( NR.PG_HybridEndYearID )
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_Qual_Overall NR
			WHERE
				NR.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
		) NR_L
			ON 1 = 1
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID
		) NR_YR
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_YR.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_YR.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				--GFE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_HybridEndYearID
		) NR_YRG
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_YRG.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_YRG.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_Qual_Overall NR_AIM
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_AIM.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_AIM.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AIM.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_AIM.PG_AimID = CL.PG_AimID
			AND NR_AIM.PG_MapID IS NULL
			AND NR_AIM.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID
		) NR_QS
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_QS.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_QS.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				NR.PG_AgeLSCID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_QualSizeID,
				NR.PG_AgeLSCID
		) NR_QSAGE
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_QSAGE.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_QSAGE.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QSAGE.PG_QualSizeID = CL.PG_QualSizeID
			AND NR_QSAGE.PG_AgeLSCID = CL.PG_AgeLSCID
	'

	SET @SQL6 = '
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_AgeLSCID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_AgeLSCID
		) NR_AGE
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_AGE.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_AGE.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_AgeLSCID,
				NR.PG_SexID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_AgeLSCID,
				NR.PG_SexID
		) NR_AGEGEN
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_AGEGEN.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_AGEGEN.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGEGEN.PG_AgeLSCID = CL.PG_AgeLSCID
			AND NR_AGEGEN.PG_SexID = CL.PG_SexID
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelCPRID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelCPRID
		) NR_LEV
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_LEV.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_LEV.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEV.PG_NVQLevelCPRID = CL.PG_NVQLevelCPRID
        LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelCPRID,
                NR.PG_AgeLSCID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelCPRID,
                NR.PG_AgeLSCID
		) NR_LEVAGE
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_LEVAGE.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_LEVAGE.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVAGE.PG_NVQLevelCPRID = CL.PG_NVQLevelCPRID
            AND NR_LEVAGE.PG_AgeLSCID = CL.PG_AgeLSCID
        LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelGroupID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelGroupID
		) NR_LEVG
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_LEVG.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_LEVG.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVG.PG_NVQLevelGroupID = CL.PG_NVQLevelGroupID
        LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelGroupID,
                NR.PG_AgeLSCID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_NVQLevelGroupID,
                NR.PG_AgeLSCID
		) NR_LEVGAGE
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_LEVGAGE.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_LEVGAGE.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVGAGE.PG_NVQLevelGroupID = CL.PG_NVQLevelGroupID
            AND NR_LEVGAGE.PG_AgeLSCID = CL.PG_AgeLSCID
    '

	SET @SQL7 = '
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_EthnicityID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_EthnicityID
		) NR_ETH
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_ETH.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_ETH.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETH.PG_EthnicityID = CL.PG_EthnicityID
        LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_EthnicityID,
                NR.PG_AgeLSCID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_EthnicityID,
                NR.PG_AgeLSCID
		) NR_ETHAGE
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_ETHAGE.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_ETHAGE.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETHAGE.PG_EthnicityID = CL.PG_EthnicityID
            AND NR_ETHAGE.PG_AgeLSCID = CL.PG_AgeLSCID
	'

	SET @SQL8 = '
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_SSA1ID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_SSA1ID
		) NR_SSA1
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_SSA1.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_SSA1.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA1.PG_SSA1ID = CL.PG_SSA1ID
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_SSA2ID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_SSA2ID
		) NR_SSA2
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_SSA2.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_SSA2.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA2.PG_SSA2ID = CL.PG_SSA2ID
		LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_DifficultyOrDisabilityID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_DifficultyOrDisabilityID
		) NR_DIF
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_DIF.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_DIF.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIF.PG_DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
        LEFT JOIN (
			SELECT
				NR.PG_HybridEndYearID,
				NR.PG_DifficultyOrDisabilityID,
                NR.PG_AgeLSCID,
				Leave = ROUND ( SUM ( NR.BM_Count_Overall ), -1 ),
				Ach = ROUND ( SUM ( NR.BM_Ach_Overall ), -1 ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( ROUND ( SUM ( NR.BM_Ach_Overall) , -1 ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Overall ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Overall NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_HybridEndYearID,
				NR.PG_DifficultyOrDisabilityID,
                NR.PG_AgeLSCID
		) NR_DIFAGE
			ON
				CASE
					WHEN CL.PG_HybridEndYearID >= NR_L.PG_HybridEndYearID THEN
						CASE
							WHEN NR_DIFAGE.PG_HybridEndYearID = NR_L.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_HybridEndYearID = NR_DIFAGE.PG_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIFAGE.PG_DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
            AND NR_DIFAGE.PG_AgeLSCID = CL.PG_AgeLSCID

		WHERE 
			CL.PG_HybridEndYearID = ''' + @AcademicYear + '''
			--AND MYS.LastAcademicYearID = ''' + @AcademicYear + '''
	'

	SET @SQL9 = '
		UNION ALL

		SELECT
			EndYear = CL.PG_ExpEndYrID,
			AcademicYear = CL.PG_AcademicYearID,
			SummaryType =
                ''CL_Timely_''
                + CASE
                    WHEN 
                        MYS.DefaultSummary = 1
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 0
                        AND MYS.RulesApplied = 1
                        AND MYS.IncludeAllAimTypes = 0
                        THEN ''RulesApplied''
                    WHEN 
                        MYS.DefaultSummary = 0
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 0
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''AllAims''
                    WHEN 
                        MYS.DefaultSummary = 0
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 1
                        AND MYS.RulesApplied = 1
                        AND MYS.IncludeAllAimTypes = 0
                        THEN ''QAR''
                    ELSE ''ERROR''
                END,
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.CL_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = CL.PG_StudentID,
			LearnerName = CL.StudentName,
			Gender = CL.PG_SexID,
			AgeGroup = REPLACE ( AGE.PG_AgeLSCName, '' '', '''' ),
			EthnicityCode = CL.PG_EthnicityID,
			EthnicityName = ETH.PG_EthnicityName,
			EthnicGroupCode = CL.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = CL.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			
            IsALSRequired = CASE WHEN STU.UserDefined1 = ''Y'' THEN 1 ELSE 0 END,
            IsCareLeaver = CASE WHEN STU.UserDefined2 = ''Y'' THEN 1 ELSE 0 END,
            IsLookedAfter = CASE WHEN STU.UserDefined3 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungCarer = CASE WHEN STU.UserDefined4 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungParent = CASE WHEN STU.UserDefined5 = ''Y'' THEN 1 ELSE 0 END,

			CampusID = COALESCE ( STU.CampusID, ''-'' ),
			FacCode = CL.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, ''-- Unknown --''),
			TeamCode = CL.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, ''-- Unknown --''),
			CostCentreCode = CL.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, ''-- Unknown --''),
			SSA1Code = CL.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = CL.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = CL.EnrolmentUserDefined1,
			SequenceNo = CL.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = CL.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = CL.PG_QType1ID,
			LARSAimTypeName = QT.PG_LearningAimTypeName,
			AimTypeCode = CL.PG_ILRAimTypeID,
			AimTypeName = AIMT.PG_ILRAimTypeName,
			DurationCode = CL.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = CL.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = CL.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = CL.PG_DurationTypeGroupID,
			DurationTypeGroupName = DURTG.PG_DurationTypeGroupName,

			EngOrMathsCode = COALESCE ( CL.PG_MathsEnglishID, ''X'' ),
			EngOrMathsName = COALESCE ( EM.PG_MathsEnglishName, ''Neither'' ),
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = CL.PG_GradeID,

			FundModelCode = 
				CASE
					WHEN CL.FundType = ''16-19 (excluding Apprenticeships)'' THEN ''1619''
					WHEN CL.FundType = ''Adult skills'' THEN ''ADULT''
					WHEN CL.FundType = ''24+ Loan'' THEN ''LOAN''
					ELSE ''X''
				END,
			FundModelName = 
				CASE
					WHEN CL.FundType = ''16-19 (excluding Apprenticeships)'' THEN ''16-19 Funded''
					WHEN CL.FundType = ''Adult skills'' THEN ''Adult Funded''
					WHEN CL.FundType = ''24+ Loan'' THEN ''Loan Funded''
					ELSE ''-- Unknown --''
				END,
			IsEFAFunded = CASE WHEN CL.IsEFA_Funded = ''Y'' THEN 1 ELSE 0 END,
			IsAdvLearnLoanFunded = CL.Loan_Funded,
			IsStart = CL.CLStartTimely,
			IsLeaver = CL.P_Count_TimelyQSRExclude,
			LessonsExpected = CL.Att_Exp,
			LessonsAttended = CL.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN CL.Att_Exp = 0 THEN 0
						ELSE CAST ( CL.Att_Act AS FLOAT ) / CAST ( CL.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = CL.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN CL.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( CL.Att_Lat AS FLOAT ) / CAST ( CL.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = CL.PVXfr,
			IsCont = CL.PVCont,
			IsWdr = CASE WHEN CL.IsWithdrawnAll = ''Y'' THEN 1 ELSE 0 END,
			IsWdrInQualifyingPeriod = CASE WHEN CL.IsWithdrawnInQualPeriod = ''Y'' THEN 1 ELSE 0 END,
			IsWdrAfterQualifyingPeriod = CASE WHEN CL.IsWithdrawnAfterQualPeriod = ''Y'' THEN 1 ELSE 0 END,
			IsOutOfFunding30 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN CL.ContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, CL.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = CL.P_Complete_TimelyQSRExclude,
			IsRetInYr = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsRet = CL.PVCont + CL.P_Complete_TimelyQSRExclude,
			IsAch = CL.P_Ach_TimelyQSRExclude,
			IsPassAToC = CL.CLPassRateAC_Timely,
	'

	SET @SQL10 = '
			NatRate_Yr_Leave = NR_YR.Leave,
			NatRate_Yr_Ach = NR_YR.Ach,
			NatRate_Yr_AchPer = NR_YR.AchPer,
			NatRate_YrGFE_Leave = NR_YRG.Leave,
			NatRate_YrGFE_Ach = NR_YRG.Ach,
			NatRate_YrGFE_AchPer = NR_YRG.AchPer,
			NatRate_Aim_Leave = NR_AIM.BM_Count_Timely,
			NatRate_Aim_Ach = ROUND ( ( CAST ( NR_AIM.BM_Count_Timely AS FLOAT ) / 100 ) * NR_AIM.BM_AchCount_Timely, 0 ),
			NatRate_Aim_AchPer = NR_AIM.BM_AchCount_Timely,
			NatRate_FworkPTSSA_Leave = NULL,
			NatRate_FworkPTSSA_Ach = NULL,
			NatRate_FworkPTSSA_AchPer = NULL,
			NatRate_Age_Leave = NR_AGE.Leave,
			NatRate_Age_Ach = NR_AGE.Ach,
			NatRate_Age_AchPer = NR_AGE.AchPer,
			NatRate_AgeGender_Leave = NR_AGEGEN.Leave,
			NatRate_AgeGender_Ach = NR_AGEGEN.Ach,
			NatRate_AgeGender_AchPer = NR_AGEGEN.AchPer,
			NatRate_Level_Leave = NR_LEV.Leave,
			NatRate_Level_Ach = NR_LEV.Ach,
			NatRate_Level_AchPer = NR_LEV.AchPer,
            NatRate_LevelAge_Leave = NR_LEVAGE.Leave,
			NatRate_LevelAge_Ach = NR_LEVAGE.Ach,
			NatRate_LevelAge_AchPer = NR_LEVAGE.AchPer,
            NatRate_LevelGrp_Leave = NR_LEVG.Leave,
			NatRate_LevelGrp_Ach = NR_LEVG.Ach,
			NatRate_LevelGrp_AchPer = NR_LEVG.AchPer,
            NatRate_LevelGrpAge_Leave = NR_LEVGAGE.Leave,
			NatRate_LevelGrpAge_Ach = NR_LEVGAGE.Ach,
			NatRate_LevelGrpAge_AchPer = NR_LEVGAGE.AchPer,
			NatRate_QualType_Leave = NR_QS.Leave,
			NatRate_QualType_Ach = NR_QS.Ach,
			NatRate_QualType_AchPer = NR_QS.AchPer,
			NatRate_QualTypeAge_Leave = NR_QSAGE.Leave,
			NatRate_QualTypeAge_Ach = NR_QSAGE.Ach,
			NatRate_QualTypeAge_AchPer = NR_QSAGE.AchPer,
			NatRate_Ethnicity_Leave = NR_ETH.Leave,
			NatRate_Ethnicity_Ach = NR_ETH.Ach,
			NatRate_Ethnicity_AchPer = NR_ETH.AchPer,
            NatRate_EthnicityAge_Leave = NR_ETHAGE.Leave,
			NatRate_EthnicityAge_Ach = NR_ETHAGE.Ach,
			NatRate_EthnicityAge_AchPer = NR_ETHAGE.AchPer,
			NatRate_SSA1_Leave = NR_SSA1.Leave,
			NatRate_SSA1_Ach = NR_SSA1.Ach,
			NatRate_SSA1_AchPer = NR_SSA1.AchPer,
			NatRate_SSA2_Leave = NR_SSA2.Leave,
			NatRate_SSA2_Ach = NR_SSA2.Ach,
			NatRate_SSA2_AchPer = NR_SSA2.AchPer,
			NatRate_DifDis_Leave = NR_DIF.Leave,
			NatRate_DifDis_Ach = NR_DIF.Ach,
			NatRate_DifDis_AchPer = NR_DIF.AchPer,
            NatRate_DifDisAge_Leave = NR_DIFAGE.Leave,
			NatRate_DifDisAge_Ach = NR_DIFAGE.Ach,
			NatRate_DifDisAge_AchPer = NR_DIFAGE.AchPer
	'

	SET @SQL11 = '
		FROM ' + @ProAchieveDatabaseLocation + 'CL_Midpoint CL
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'vCL_MYS_RDS_Seln MYS 
			ON MYS.CL_MidpointID = CL.CL_MidpointID
            AND MYS.PG_ProviderID = CL.PG_ProviderID
            --AND MYS.DefaultSummary = 0
            AND MYS.IsArchived = 0
            --AND MYS.IsQSRSummary = 1
            --AND MYS.RulesApplied = 1
            --AND MYS.IncludeAllAimTypes = 0
            AND MYS.LastAcademicYearID = (
                SELECT 
                    MaxYear = MAX ( MYS2.LastAcademicYearID )
                FROM ' + @ProAchieveDatabaseLocation + 'vCL_MYS_RDS_Seln MYS2
                WHERE
                    MYS2.DefaultSummary = MYS.DefaultSummary
                    AND MYS2.IsArchived = MYS.IsArchived
                    AND MYS2.IsQSRSummary = MYS.IsQSRSummary
                    AND MYS2.RulesApplied = MYS.RulesApplied
                    AND MYS2.IncludeAllAimTypes = MYS.IncludeAllAimTypes
            )
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'Student STU
			ON STU.StudentID = CL.PG_StudentID
			AND STU.AcademicYearID = CL.PG_AcademicYearID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PI_LR_Enrolment ENR 
			ON ENR.PG_ProviderID = CL.PG_ProviderID
			AND ENR.PG_AcademicYearID = CL.PG_AcademicYearID
			AND ENR.PG_StudentID = CL.PG_StudentID
			AND ENR.SequenceNo = CL.SequenceNo
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'GN_Aim AIM 
			ON AIM.GN_AimID = CL.PG_AimID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = CL.PG_EthnicityID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = CL.PG_EthnicGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = CL.PG_SSA1ID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = CL.PG_SSA2ID
	'

	SET @SQL12 = '
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_LearningAimType QT
			ON QT.PG_LearningAimTypeID = CL.PG_QType1ID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_ILRAimType AIMT
			ON AIMT.PG_ILRAimTypeID = CL.PG_ILRAimTypeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Duration DUR
			ON DUR.PG_DurationID = CL.PG_DurationID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = CL.PG_DurationGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationType DURT
			ON DURT.PG_DurationTypeID = CL.PG_DurationTypeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationTypeGroup DURTG
			ON DURTG.PG_DurationTypeGroupID = CL.PG_DurationTypeGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_QualSize QS
			ON QS.PG_QualSizeID = CL.PG_QualSizeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = CL.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = ''Attend'',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = ''Punc'',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AgeLSC AGE
			ON AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = CL.PG_StudentID
			AND FAM.PG_ProviderID = CL.PG_ProviderID
			AND FAM.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = CL.PG_NVQLevelID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = CL.PG_NVQLevelGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = CL.PG_Structure1ID
			AND DIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = CL.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = CL.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure3IY CC
			ON CC.GN_Structure3IYID = CL.PG_Structure3ID
			AND CC.PG_AcademicYearID = CL.PG_AcademicYearID
		--LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = CL.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = CL.PG_ExpEndYrID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = CL.PG_AggCourseID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_MathsEnglish EM
			ON EM.PG_MathsEnglishID = CL.PG_MathsEnglishID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Enrolment_Attendance ATT 
			ON ATT.StudentID = CL.PG_StudentID
			AND ATT.CollegeID = CL.PG_ProviderID
			AND ATT.AcademicYearID = CL.PG_AcademicYearID
			AND ATT.SequenceNo = CL.SequenceNo
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Student_UDF LAC
			ON LAC.StudentID = CL.PG_StudentID
			AND LAC.CollegeID = CL.PG_ProviderID
			AND LAC.AcademicYearID = CL.PG_AcademicYearID

	'

	SET @SQL13 = '
		LEFT JOIN (
			SELECT
				PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_Qual_Timely NR
			WHERE
				NR.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
		) NR_L
			ON 1 = 1
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID
		) NR_YR
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_YR.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_YR.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				--GFE
				NR.PG_CollegeTypeID = 2
			GROUP BY
				NR.PG_ExpEndYrID
		) NR_YRG
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_YRG.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_YRG.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_Qual_Timely NR_AIM
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_AIM.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_AIM.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AIM.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_AIM.PG_AimID = CL.PG_AimID
			AND NR_AIM.PG_MapID IS NULL
			AND NR_AIM.PG_AgeLSCID IS NULL
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID
		) NR_QS
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_QS.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_QS.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QS.PG_QualSizeID = CL.PG_QualSizeID
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				NR.PG_AgeLSCID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_QualSizeID,
				NR.PG_AgeLSCID
		) NR_QSAGE
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_QSAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_QSAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_QSAGE.PG_QualSizeID = CL.PG_QualSizeID
			AND NR_QSAGE.PG_AgeLSCID = CL.PG_AgeLSCID
	'

	SET @SQL14 = '
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_AgeLSCID,
				Leave = ROUND ( SUM ( NR.BM_Count_Timely ), -1 ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN ROUND ( SUM ( NR.BM_Count_Timely ), -1 ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( ROUND ( SUM ( NR.BM_Count_Timely ), -1 ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_AgeLSCID
		) NR_AGE
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_AGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_AGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGE.PG_AgeLSCID = CL.PG_AgeLSCID
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_AgeLSCID,
				NR.PG_SexID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_AgeLSCID,
				NR.PG_SexID
		) NR_AGEGEN
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_AGEGEN.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_AGEGEN.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGEGEN.PG_AgeLSCID = CL.PG_AgeLSCID
			AND NR_AGEGEN.PG_SexID = CL.PG_SexID
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelCPRID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelCPRID
		) NR_LEV
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_LEV.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_LEV.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEV.PG_NVQLevelCPRID = CL.PG_NVQLevelCPRID
        LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelCPRID,
                NR.PG_AgeLSCID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelCPRID,
                NR.PG_AgeLSCID
		) NR_LEVAGE
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_LEVAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_LEVAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVAGE.PG_NVQLevelCPRID = CL.PG_NVQLevelCPRID
            AND NR_LEVAGE.PG_AgeLSCID = CL.PG_AgeLSCID
        LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelGroupID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelGroupID
		) NR_LEVG
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_LEVG.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_LEVG.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVG.PG_NVQLevelGroupID = CL.PG_NVQLevelGroupID
        LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelGroupID,
                NR.PG_AgeLSCID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_NVQLevelGroupID,
                NR.PG_AgeLSCID
		) NR_LEVGAGE
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_LEVGAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_LEVGAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVGAGE.PG_NVQLevelGroupID = CL.PG_NVQLevelGroupID
            AND NR_LEVGAGE.PG_AgeLSCID = CL.PG_AgeLSCID
    '

	SET @SQL15 = '
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_EthnicityID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_EthnicityID
		) NR_ETH
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_ETH.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_ETH.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETH.PG_EthnicityID = CL.PG_EthnicityID
        LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_EthnicityID,
                NR.PG_AgeLSCID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_EthnicityID,
                NR.PG_AgeLSCID
		) NR_ETHAGE
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_ETHAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_ETHAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETHAGE.PG_EthnicityID = CL.PG_EthnicityID
            AND NR_ETHAGE.PG_AgeLSCID = CL.PG_AgeLSCID
	'

	SET @SQL16 = '
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_SSA1ID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_SSA1ID
		) NR_SSA1
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_SSA1.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_SSA1.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA1.PG_SSA1ID = CL.PG_SSA1ID
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_SSA2ID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_SSA2ID
		) NR_SSA2
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_SSA2.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_SSA2.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA2.PG_SSA2ID = CL.PG_SSA2ID
		LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_DifficultyOrDisabilityID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_DifficultyOrDisabilityID
		) NR_DIF
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_DIF.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_DIF.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIF.PG_DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
        LEFT JOIN (
			SELECT
				NR.PG_ExpEndYrID,
				NR.PG_DifficultyOrDisabilityID,
                NR.PG_AgeLSCID,
				Leave = SUM ( NR.BM_Count_Timely ),
				Ach = SUM ( NR.BM_Ach_Timely ),
				AchPer = 
					CASE
						WHEN SUM ( NR.BM_Count_Timely ) = 0 THEN 0
						ELSE 
							ROUND ( CAST ( SUM ( NR.BM_Ach_Timely ) AS FLOAT ) / CAST ( SUM ( NR.BM_Count_Timely ) AS FLOAT ), 4 )
					END
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_CL_High_Timely NR
			WHERE
				NR.PG_CollegeTypeID = 
					CASE
						WHEN ' + CAST ( @CollegeType AS VARCHAR(6) ) + ' = 0 THEN NR.PG_CollegeTypeID 
						ELSE ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
					END
			GROUP BY
				NR.PG_ExpEndYrID,
				NR.PG_DifficultyOrDisabilityID,
                NR.PG_AgeLSCID
		) NR_DIFAGE
			ON
				CASE
					WHEN CL.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_DIFAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN CL.PG_ExpEndYrID = NR_DIFAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIFAGE.PG_DifficultyOrDisabilityID = CL.PG_DifficultyOrDisabilityID
            AND NR_DIFAGE.PG_AgeLSCID = CL.PG_AgeLSCID

		WHERE 
			CL.PG_ExpEndYrID = ''' + @AcademicYear + '''
			--AND MYS.LastAcademicYearID = ''' + @AcademicYear + '''
	'

	SET @SQL17 = '
		UNION ALL

		SELECT
			EndYear = ER.WB_HybridEndYearID,
			AcademicYear = AY.PG_AcademicYearID,
			SummaryType =
                ''ER_Overall_''
                + CASE
                    WHEN 
                        MYS.DefaultSummary = 1
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 0
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''AllAims''
                    WHEN 
                        MYS.DefaultSummary = 0
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 1
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''QAR''
                    ELSE ''ERROR''
                END,
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.ER_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = ER.PG_StudentID,
			LearnerName = STU.Surname + '', '' + STU.Forenames,
			Gender = ER.PG_SexID,
			AgeGroup = AGE.PG_WBLFundAgeGroupName,
			EthnicityCode = ER.PG_EthnicityID,
			EthnicityName = ETH.PG_EthnicityName,
			EthnicGroupCode = ER.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = ER.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,

            IsALSRequired = CASE WHEN STU.UserDefined1 = ''Y'' THEN 1 ELSE 0 END,
            IsCareLeaver = CASE WHEN STU.UserDefined2 = ''Y'' THEN 1 ELSE 0 END,
            IsLookedAfter = CASE WHEN STU.UserDefined3 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungCarer = CASE WHEN STU.UserDefined4 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungParent = CASE WHEN STU.UserDefined5 = ''Y'' THEN 1 ELSE 0 END,

			CampusID = COALESCE ( STU.CampusID, ''-'' ),
			FacCode = ER.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, ''-- Unknown --''),
			TeamCode = ER.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, ''-- Unknown --''),
			CostCentreCode = ER.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, ''-- Unknown --''),
			SSA1Code = ER.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = ER.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = ER.PG_ProgTypeID,
			ProgTypeShortName = ER.PG_ProgTypeGroupShortName,
			ProgTypeName = ER.PG_ProgTypeName,
			FrameworkCode = ER.PG_FrameworkID,
			FrameworkName = ER.PG_FrameworkName,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = ER.EnrolmentUserDefined1,
			SequenceNo = ER.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = ER.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = ER.PG_ILRAimTypeID,
			AimTypeName = NULL,
			DurationCode = ER.WB_DurationID,
			DurationName = DUR.WB_DurationName,
			DurationGroupCode = NULL,
			DurationGroupName = NULL,
			DurationTypeCode = NULL,
			DurationTypeName = NULL,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = ''X'',
			EngOrMathsName = ''Neither'',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = NULL,

			FundModelCode = ''APP'',
			FundModelName = ''Apprenticeship'',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = ER.WBStartOverall,
			IsLeaver = ER.WBOverallLeave,
			LessonsExpected = ER.Att_Exp,
			LessonsAttended = ER.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN ER.Att_Exp = 0 THEN 0
						ELSE CAST ( ER.Att_Act AS FLOAT ) / CAST ( ER.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ER.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN ER.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ER.Att_Lat AS FLOAT ) / CAST ( ER.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = ER.WBXfr,
			IsCont = ER.WBContOverall,
			IsWdr = ER.WBLeave,
			IsWdrInQualifyingPeriod = ER.WBWithdrawnin6Wks,
			IsWdrAfterQualifyingPeriod = ER.WBWithdrawnAfter6wksOverall,
			IsOutOfFunding30 = 
				CASE
					WHEN ER.WBContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN ER.WBContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN ER.WBContinBeyondEnd = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = ER.WBRet - ER.WBContOverall,
			IsRetInYr = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsRet = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsAch = ER.WBAchFrameOverallLSCExclude,
			IsPassAToC = 0,
	'

	SET @SQL18 = '
			NatRate_Yr_Leave = NR_YR.BMLeave,
			NatRate_Yr_Ach = NR_YR.BMAchFrame,
			NatRate_Yr_AchPer = CAST ( NR_YR.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_YrGFE_Leave = NR_YRG.BMLeave,
			NatRate_YrGFE_Ach = NR_YRG.BMAchFrame,
			NatRate_YrGFE_AchPer = CAST ( NR_YRG.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_Aim_Leave = NR_FW.BMLeave,
			NatRate_Aim_Ach = NR_FW.BMAchFrame,
			NatRate_Aim_AchPer = CAST ( NR_FW.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_FworkPTSSA_Leave = NR_FWPGSSA.BMLeave,
			NatRate_FworkPTSSA_Ach = NR_FWPGSSA.BMAchFrame,
			NatRate_FworkPTSSA_AchPer = CAST ( NR_FWPGSSA.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_Age_Leave = NR_AGE.BMLeave,
			NatRate_Age_Ach = NR_AGE.BMAchFrame,
			NatRate_Age_AchPer = CAST ( NR_AGE.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_AgeGender_Leave = NR_AGEGEN.BMLeave,
			NatRate_AgeGender_Ach = NR_AGEGEN.BMAchFrame,
			NatRate_AgeGender_AchPer = CAST ( NR_AGEGEN.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_Level_Leave = NR_LEV.BMLeave,
			NatRate_Level_Ach = NR_LEV.BMAchFrame,
			NatRate_Level_AchPer = CAST ( NR_LEV.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
            NatRate_LevelAge_Leave = NR_LEVAGE.BMLeave,
			NatRate_LevelAge_Ach = NR_LEVAGE.BMAchFrame,
			NatRate_LevelAge_AchPer = CAST ( NR_LEVAGE.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
            NatRate_LevelGrp_Leave = NULL,
			NatRate_LevelGrp_Ach = NULL,
			NatRate_LevelGrp_AchPer = NULL,
            NatRate_LevelGrpAge_Leave = NULL,
			NatRate_LevelGrpAge_Ach = NULL,
			NatRate_LevelGrpAge_AchPer = NULL,
			NatRate_QualType_Leave = NULL,
			NatRate_QualType_Ach = NULL,
			NatRate_QualType_AchPer = NULL,
			NatRate_QualTypeAge_Leave = NULL,
			NatRate_QualTypeAge_Ach = NULL,
			NatRate_QualTypeAge_AchPer = NULL,
			NatRate_Ethnicity_Leave = NR_ETH.BMLeave,
			NatRate_Ethnicity_Ach = NR_ETH.BMAchFrame,
			NatRate_Ethnicity_AchPer = CAST ( NR_ETH.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
            NatRate_EthnicityAge_Leave = NR_ETHAGE.BMLeave,
			NatRate_EthnicityAge_Ach = NR_ETHAGE.BMAchFrame,
			NatRate_EthnicityAge_AchPer = CAST ( NR_ETHAGE.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_SSA1_Leave = NR_SSA1.BMLeave,
			NatRate_SSA1_Ach = NR_SSA1.BMAchFrame,
			NatRate_SSA1_AchPer = CAST ( NR_SSA1.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_SSA2_Leave = NR_SSA2.BMLeave,
			NatRate_SSA2_Ach = NR_SSA2.BMAchFrame,
			NatRate_SSA2_AchPer = CAST ( NR_SSA2.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
			NatRate_DifDis_Leave = NR_DIF.BMLeave,
			NatRate_DifDis_Ach = NR_DIF.BMAchFrame,
			NatRate_DifDis_AchPer = CAST ( NR_DIF.BMAchFrameOverallLeave AS FLOAT ) / 100.00,
            NatRate_DifDisAge_Leave = NR_DIFAGE.BMLeave,
			NatRate_DifDisAge_Ach = NR_DIFAGE.BMAchFrame,
			NatRate_DifDisAge_AchPer = CAST ( NR_DIFAGE.BMAchFrameOverallLeave AS FLOAT ) / 100.00
	'

	SET @SQL19 = '
		FROM ' + @ProAchieveDatabaseLocation + 'vER_Summary_Apprenticeships ER
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_AcademicYear AY
			ON AY.AcademicYearNumber = ER.AcademicYearNumber
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'vER_MYS_RDS_Seln MYS
			ON MYS.ER_MYSID = ER.ER_MYSID
            --AND MYS.DefaultSummary = 1
            AND MYS.IsArchived = 0
            -- AND MYS.IsQSRSummary = 0
            --AND MYS.RulesApplied = 0
            --AND MYS.IncludeAllAimTypes = 1
            AND MYS.LastAcademicYearID = (
                SELECT 
                    MaxYear = MAX ( MYS2.LastAcademicYearID )
                FROM ' + @ProAchieveDatabaseLocation + 'vER_MYS_RDS_Seln MYS2
                WHERE
                    MYS2.DefaultSummary = MYS.DefaultSummary
                    AND MYS2.IsArchived = MYS.IsArchived
                    AND MYS2.IsQSRSummary = MYS.IsQSRSummary
                    AND MYS2.RulesApplied = MYS.RulesApplied
                    AND MYS2.IncludeAllAimTypes = MYS.IncludeAllAimTypes
            )
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'Student STU
			ON STU.StudentID = ER.PG_StudentID
			AND STU.AcademicYearID = AY.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Aim AIM 
			ON AIM.GN_AimID = ER.PG_AimID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = ER.PG_EthnicityID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = ER.PG_EthnicGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = ER.PG_SSA1ID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = ER.PG_SSA2ID
	'

	SET @SQL20 = '
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'WB_Duration DUR
			ON DUR.WB_DurationID = ER.WB_DurationID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_ProgType PT
			ON PT.PG_ProgTypeID = ER.PG_ProgTypeID
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = ''Attend'',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = ''Punc'',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_WBLFundAgeGroup AGE 
			ON AGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_QualSize QS
			ON QS.PG_QualSizeID = ER.PG_QualSizeID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = ER.PG_QualSizeID
			AND MINS.ThresholdID = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = ER.PG_StudentID
			AND FAM.PG_ProviderID = ER.PG_ProviderID
			AND FAM.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = ER.PG_NVQLevelID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = ER.PG_NVQLevelGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = ER.PG_Structure1ID
			AND DIV.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = ER.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure3IY CC
			ON CC.GN_Structure3IYID = ER.PG_Structure3ID
			AND CC.PG_AcademicYearID = ER.WB_HybridEndYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure4IY GRP
			ON GRP.GN_Structure4IYID = ER.PG_Structure4ID
			AND GRP.PG_AcademicYearID = ER.WB_HybridEndYearID
		--LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = ER.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = ER.PG_HybridEndYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = ER.PG_AggCourseID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = ER.PG_DifficultyOrDisabilityID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Enrolment_Attendance ATT 
			ON ATT.StudentID = ER.PG_StudentID
			AND ATT.CollegeID = ER.PG_ProviderID
			AND ATT.AcademicYearID = ER.WB_HybridEndYearID
			AND ATT.SequenceNo = ER.SequenceNo
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Student_UDF LAC
			ON LAC.StudentID = ER.PG_StudentID
			AND LAC.CollegeID = ER.PG_ProviderID
			AND LAC.AcademicYearID = ER.WB_HybridEndYearID
	'

	SET @SQL21 = '
		LEFT JOIN (
			SELECT
				WB_HybridEndYearID = MAX ( NR.WB_HybridEndYearID )
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Overall NR
			WHERE
				NR.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
		) NR_L
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_FWPGSSA 
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_FWPGSSA.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_FWPGSSA.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_FWPGSSA.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_FWPGSSA.PG_WBLFundAgeGroupID IS NULL
			AND NR_FWPGSSA.PG_FrameworkID = ER.PG_FrameworkID
			AND NR_FWPGSSA.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_FWPGSSA.PG_SSA1ID = ER.PG_SSA1ID
			AND NR_FWPGSSA.PG_SSA2ID = ER.PG_SSA2ID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_YR
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_YR.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_YR.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_YR.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_YR.PG_WBLFundAgeGroupID IS NULL
			AND NR_YR.PG_FrameworkID IS NULL
			AND NR_YR.PG_ProgTypeID IS NULL
			AND NR_YR.PG_SSA1ID IS NULL
			AND NR_YR.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_YRG
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_YRG.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_YRG.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_YRG.PG_CollegeTypeID = 2
			AND NR_YRG.PG_WBLFundAgeGroupID IS NULL
			AND NR_YRG.PG_FrameworkID IS NULL
			AND NR_YRG.PG_ProgTypeID IS NULL
			AND NR_YRG.PG_SSA1ID IS NULL
			AND NR_YRG.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_FW
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_FW.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_FW.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_FW.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_FW.PG_WBLFundAgeGroupID IS NULL
			AND NR_FW.PG_FrameworkID = ER.PG_FrameworkID
			AND NR_FW.PG_ProgTypeID IS NULL
			AND NR_FW.PG_SSA1ID IS NULL
			AND NR_FW.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_AGE
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_AGE.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_AGE.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_AGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_AGE.PG_FrameworkID IS NULL
			AND NR_AGE.PG_ProgTypeID IS NULL
			AND NR_AGE.PG_SSA1ID IS NULL
			AND NR_AGE.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Overall NR_AGEGEN
			ON 
				CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_AGEGEN.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_AGEGEN.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGEGEN.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_AGEGEN.PG_ProgTypeID IS NULL
			AND NR_AGEGEN.PG_SSA1ID IS NULL
			AND NR_AGEGEN.PG_SSA2ID IS NULL
			AND NR_AGEGEN.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_AGEGEN.PG_SexID = ER.PG_SexID
			AND NR_AGEGEN.PG_DifficultyorDisabilityID IS NULL
			AND NR_AGEGEN.PG_LearningDifficultyID IS NULL
			AND NR_AGEGEN.PG_EthnicityID IS NULL
			AND NR_AGEGEN.PG_EthnicityGroupQARID IS NULL
	'

	SET @SQL22 = '
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_SSA1
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_SSA1.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_SSA1.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA1.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_SSA1.PG_WBLFundAgeGroupID IS NULL
			AND NR_SSA1.PG_FrameworkID IS NULL
			AND NR_SSA1.PG_ProgTypeID IS NULL
			AND NR_SSA1.PG_SSA1ID = ER.PG_SSA1ID
			AND NR_SSA1.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_SSA2
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_SSA2.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_SSA2.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA2.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_SSA2.PG_WBLFundAgeGroupID IS NULL
			AND NR_SSA2.PG_FrameworkID IS NULL
			AND NR_SSA2.PG_ProgTypeID IS NULL
			AND NR_SSA2.PG_SSA1ID IS NULL
			AND NR_SSA2.PG_SSA2ID = ER.PG_SSA2ID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_LEV
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_LEV.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_LEV.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEV.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_LEV.PG_WBLFundAgeGroupID IS NULL
			AND NR_LEV.PG_FrameworkID IS NULL
			AND NR_LEV.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_LEV.PG_SSA1ID IS NULL
			AND NR_LEV.PG_SSA2ID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Overall NR_LEVAGE
			ON CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_LEVAGE.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_LEVAGE.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVAGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_LEVAGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_LEVAGE.PG_FrameworkID IS NULL
			AND NR_LEVAGE.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_LEVAGE.PG_SSA1ID IS NULL
			AND NR_LEVAGE.PG_SSA2ID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Overall NR_ETH
			ON 
				CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_ETH.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_ETH.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETH.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_ETH.PG_ProgTypeID IS NULL
			AND NR_ETH.PG_SSA1ID IS NULL
			AND NR_ETH.PG_SSA2ID IS NULL
			AND NR_ETH.PG_WBLFundAgeGroupID IS NULL
			AND NR_ETH.PG_SexID IS NULL
			AND NR_ETH.PG_DifficultyorDisabilityID IS NULL
			AND NR_ETH.PG_LearningDifficultyID IS NULL
			AND NR_ETH.PG_EthnicityID = ER.PG_EthnicityID
			AND NR_ETH.PG_EthnicityGroupQARID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Overall NR_ETHAGE
			ON 
				CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_ETHAGE.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_ETHAGE.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETHAGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_ETHAGE.PG_ProgTypeID IS NULL
			AND NR_ETHAGE.PG_SSA1ID IS NULL
			AND NR_ETHAGE.PG_SSA2ID IS NULL
			AND NR_ETHAGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_ETHAGE.PG_SexID IS NULL
			AND NR_ETHAGE.PG_DifficultyorDisabilityID IS NULL
			AND NR_ETHAGE.PG_LearningDifficultyID IS NULL
			AND NR_ETHAGE.PG_EthnicityID = ER.PG_EthnicityID
			AND NR_ETHAGE.PG_EthnicityGroupQARID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Overall NR_DIF
			ON 
				CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_DIF.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_DIF.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIF.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_DIF.PG_ProgTypeID IS NULL
			AND NR_DIF.PG_SSA1ID IS NULL
			AND NR_DIF.PG_SSA2ID IS NULL
			AND NR_DIF.PG_WBLFundAgeGroupID IS NULL
			AND NR_DIF.PG_SexID IS NULL
			AND NR_DIF.PG_DifficultyorDisabilityID = ER.PG_DifficultyorDisabilityID
			AND NR_DIF.PG_LearningDifficultyID IS NULL
			AND NR_DIF.PG_EthnicityID IS NULL
			AND NR_DIF.PG_EthnicityGroupQARID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Overall NR_DIFAGE
			ON 
				CASE
					WHEN ER.WB_HybridEndYearID >= NR_L.WB_HybridEndYearID THEN
						CASE
							WHEN NR_DIFAGE.WB_HybridEndYearID = NR_L.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.WB_HybridEndYearID = NR_DIFAGE.WB_HybridEndYearID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIFAGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_DIFAGE.PG_ProgTypeID IS NULL
			AND NR_DIFAGE.PG_SSA1ID IS NULL
			AND NR_DIFAGE.PG_SSA2ID IS NULL
			AND NR_DIFAGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_DIFAGE.PG_SexID IS NULL
			AND NR_DIFAGE.PG_DifficultyorDisabilityID = ER.PG_DifficultyorDisabilityID
			AND NR_DIFAGE.PG_LearningDifficultyID IS NULL
			AND NR_DIFAGE.PG_EthnicityID IS NULL
			AND NR_DIFAGE.PG_EthnicityGroupQARID IS NULL

		WHERE
			ER.WB_HybridEndYearID = ''' + @AcademicYear + '''
			--ND MYS.LastAcademicYearID = ''' + @AcademicYear + '''
			--Default filters applied in ProAchieve
			AND ER.IsNotFundedAllYears = 0
			AND ER.WB_ProgGroupID = 1
	'

	SET @SQL23 = '
		UNION ALL

		SELECT
			EndYear = ER.PG_ExpEndYrID,
			AcademicYear = AY.PG_AcademicYearID,
			SummaryType =
                ''ER_Timely_''
                + CASE
                    WHEN 
                        MYS.DefaultSummary = 1
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 0
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''AllAims''
                    WHEN 
                        MYS.DefaultSummary = 0
                        AND MYS.IsArchived = 0
                        AND MYS.IsQSRSummary = 1
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''QAR''
                    ELSE ''ERROR''
                END,
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.ER_MYSName,
			NumYears = MYS.Years,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = ER.PG_StudentID,
			LearnerName = STU.Surname + '', '' + STU.Forenames,
			Gender = ER.PG_SexID,
			AgeGroup = AGE.PG_WBLFundAgeGroupName,
			EthnicityCode = ER.PG_EthnicityID,
			EthnicityName = ETH.PG_EthnicityName,
			EthnicGroupCode = ER.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = ER.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			
            IsALSRequired = CASE WHEN STU.UserDefined1 = ''Y'' THEN 1 ELSE 0 END,
            IsCareLeaver = CASE WHEN STU.UserDefined2 = ''Y'' THEN 1 ELSE 0 END,
            IsLookedAfter = CASE WHEN STU.UserDefined3 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungCarer = CASE WHEN STU.UserDefined4 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungParent = CASE WHEN STU.UserDefined5 = ''Y'' THEN 1 ELSE 0 END,

			CampusID = COALESCE ( STU.CampusID, ''-'' ),
			FacCode = ER.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, ''-- Unknown --''),
			TeamCode = ER.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, ''-- Unknown --''),
			CostCentreCode = ER.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, ''-- Unknown --''),
			SSA1Code = ER.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = ER.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = ER.PG_ProgTypeID,
			ProgTypeShortName = ER.PG_ProgTypeGroupShortName,
			ProgTypeName = ER.PG_ProgTypeName,
			FrameworkCode = ER.PG_FrameworkID,
			FrameworkName = ER.PG_FrameworkName,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = ER.EnrolmentUserDefined1,
			SequenceNo = ER.SequenceNo,
			
			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = ER.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = ER.PG_ILRAimTypeID,
			AimTypeName = NULL,
			DurationCode = ER.WB_DurationID,
			DurationName = DUR.WB_DurationName,
			DurationGroupCode = NULL,
			DurationGroupName = NULL,
			DurationTypeCode = NULL,
			DurationTypeName = NULL,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = ''X'',
			EngOrMathsName = ''Neither'',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NVQG.NVQLevelGroupID,
			NVQLevelGrpName = NVQG.Description,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = NULL,

			FundModelCode = ''APP'',
			FundModelName = ''Apprenticeship'',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = ER.WBStartTimely,
			IsLeaver = ER.WBTimelyLeave,
			LessonsExpected = ER.Att_Exp,
			LessonsAttended = ER.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN ER.Att_Exp = 0 THEN 0
						ELSE CAST ( ER.Att_Act AS FLOAT ) / CAST ( ER.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ER.Att_Lat,
			PuncPer = 
				ROUND (
					CASE
						WHEN ER.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ER.Att_Lat AS FLOAT ) / CAST ( ER.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = ER.WBXfr,
			IsCont = ER.WBContTimely,
			IsWdr = ER.WBLeave,
			IsWdrInQualifyingPeriod = ER.WBWithdrawnin6Wks,
			IsWdrAfterQualifyingPeriod = ER.WBWithdrawnAfter6wksTimely,
			IsOutOfFunding30 = 
				CASE
					WHEN ER.WBContinBeyondEndTimely = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) <= 30 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding60 = 
				CASE
					WHEN ER.WBContinBeyondEndTimely = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 31 AND 60 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsOutOfFunding90 = 
				CASE
					WHEN ER.WBContinBeyondEndTimely = 1 THEN
						CASE
							WHEN DATEDIFF ( DAY, ER.PlannedEndDate, CAST ( GetDate() AS DATE ) ) BETWEEN 61 AND 90 THEN 1
							ELSE 0
						END
					ELSE 0
				END,
			IsComp = ER.WBRet - ER.WBContTimely,
			IsRetInYr = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsRet = 
				CASE
					WHEN ER.WBOverdue = 1 AND ER.WB_FrameworkStatusID IN (0,5) THEN 0
					ELSE ER.WBRet
				END,
			IsAch = ER.WBAchFrameTimelyLSCExclude,
			IsPassAToC = 0,
	'

	SET @SQL24 = '
			NatRate_Yr_Leave = NR_YR.BMLeave,
			NatRate_Yr_Ach = NR_YR.BMAchFrameTimely,
			NatRate_Yr_AchPer = CAST ( NR_YR.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_YrGFE_Leave = NR_YRG.BMLeave,
			NatRate_YrGFE_Ach = NR_YRG.BMAchFrameTimely,
			NatRate_YrGFE_AchPer = CAST ( NR_YRG.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_Aim_Leave = NR_FW.BMLeave,
			NatRate_Aim_Ach = NR_FW.BMAchFrameTimely,
			NatRate_Aim_AchPer = CAST ( NR_FW.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_FworkPTSSA_Leave = NR_FWPGSSA.BMLeave,
			NatRate_FworkPTSSA_Ach = NR_FWPGSSA.BMAchFrameTimely,
			NatRate_FworkPTSSA_AchPer = CAST ( NR_FWPGSSA.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_Age_Leave = NR_AGE.BMLeave,
			NatRate_Age_Ach = NR_AGE.BMAchFrameTimely,
			NatRate_Age_AchPer = CAST ( NR_AGE.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_AgeGender_Leave = NR_AGEGEN.BMLeave,
			NatRate_AgeGender_Ach = NR_AGEGEN.BMAchFrameTimely,
			NatRate_AgeGender_AchPer = CAST ( NR_AGEGEN.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_Level_Leave = NR_LEV.BMLeave,
			NatRate_Level_Ach = NR_LEV.BMAchFrameTimely,
			NatRate_Level_AchPer = CAST ( NR_LEV.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
            NatRate_LevelAge_Leave = NR_LEVAGE.BMLeave,
			NatRate_LevelAge_Ach = NR_LEVAGE.BMAchFrameTimely,
			NatRate_LevelAge_AchPer = CAST ( NR_LEVAGE.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
            NatRate_LevelGrp_Leave = NULL,
			NatRate_LevelGrp_Ach = NULL,
			NatRate_LevelGrp_AchPer = NULL,
            NatRate_LevelGrpAge_Leave = NULL,
			NatRate_LevelGrpAge_Ach = NULL,
			NatRate_LevelGrpAge_AchPer = NULL,
			NatRate_QualType_Leave = NULL,
			NatRate_QualType_Ach = NULL,
			NatRate_QualType_AchPer = NULL,
			NatRate_QualTypeAge_Leave = NULL,
			NatRate_QualTypeAge_Ach = NULL,
			NatRate_QualTypeAge_AchPer = NULL,
			NatRate_Ethnicity_Leave = NR_ETH.BMLeave,
			NatRate_Ethnicity_Ach = NR_ETH.BMAchFrameTimely,
			NatRate_Ethnicity_AchPer = CAST ( NR_ETH.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
            NatRate_EthnicityAge_Leave = NR_ETHAGE.BMLeave,
			NatRate_EthnicityAge_Ach = NR_ETHAGE.BMAchFrameTimely,
			NatRate_EthnicityAge_AchPer = CAST ( NR_ETHAGE.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_SSA1_Leave = NR_SSA1.BMLeave,
			NatRate_SSA1_Ach = NR_SSA1.BMAchFrameTimely,
			NatRate_SSA1_AchPer = CAST ( NR_SSA1.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_SSA2_Leave = NR_SSA2.BMLeave,
			NatRate_SSA2_Ach = NR_SSA2.BMAchFrameTimely,
			NatRate_SSA2_AchPer = CAST ( NR_SSA2.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
			NatRate_DifDis_Leave = NR_DIF.BMLeave,
			NatRate_DifDis_Ach = NR_DIF.BMAchFrameTimely,
			NatRate_DifDis_AchPer = CAST ( NR_DIF.BMAchFrameTimelyLeave AS FLOAT ) / 100.00,
            NatRate_DifDisAge_Leave = NR_DIFAGE.BMLeave,
			NatRate_DifDisAge_Ach = NR_DIFAGE.BMAchFrameTimely,
			NatRate_DifDisAge_AchPer = CAST ( NR_DIFAGE.BMAchFrameTimelyLeave AS FLOAT ) / 100.00
	'

	SET @SQL25 = '
		FROM ' + @ProAchieveDatabaseLocation + 'vER_Summary_Apprenticeships ER
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_AcademicYear AY
			ON AY.AcademicYearNumber = ER.AcademicYearNumber
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'vER_MYS_RDS_Seln MYS
			ON MYS.ER_MYSID = ER.ER_MYSID
            --AND MYS.DefaultSummary = 1
            AND MYS.IsArchived = 0
            -- AND MYS.IsQSRSummary = 0
            --AND MYS.RulesApplied = 0
            --AND MYS.IncludeAllAimTypes = 1
            AND MYS.LastAcademicYearID = (
                SELECT 
                    MaxYear = MAX ( MYS2.LastAcademicYearID )
                FROM ' + @ProAchieveDatabaseLocation + 'vER_MYS_RDS_Seln MYS2
                WHERE
                    MYS2.DefaultSummary = MYS.DefaultSummary
                    AND MYS2.IsArchived = MYS.IsArchived
                    AND MYS2.IsQSRSummary = MYS.IsQSRSummary
                    AND MYS2.RulesApplied = MYS.RulesApplied
                    AND MYS2.IncludeAllAimTypes = MYS.IncludeAllAimTypes
            )
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'Student STU
			ON STU.StudentID = ER.PG_StudentID
			AND STU.AcademicYearID = AY.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Aim AIM 
			ON AIM.GN_AimID = ER.PG_AimID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = ER.PG_EthnicityID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = ER.PG_EthnicGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = ER.PG_SSA1ID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = ER.PG_SSA2ID
	'

	SET @SQL26 = '
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'WB_Duration DUR
			ON DUR.WB_DurationID = ER.WB_DurationID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_ProgType PT
			ON PT.PG_ProgTypeID = ER.PG_ProgTypeID
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = ''Attend'',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = ''Punc'',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_WBLFundAgeGroup AGE 
			ON AGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_QualSize QS
			ON QS.PG_QualSizeID = ER.PG_QualSizeID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = ER.PG_QualSizeID
			AND MINS.ThresholdID = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = ER.PG_StudentID
			AND FAM.PG_ProviderID = ER.PG_ProviderID
			AND FAM.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = ER.PG_NVQLevelID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'NVQLevelGroup NVQG
			ON NVQG.NVQLevelGroupID = ER.PG_NVQLevelGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = ER.PG_Structure1ID
			AND DIV.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = ER.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure3IY CC
			ON CC.GN_Structure3IYID = ER.PG_Structure3ID
			AND CC.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure4IY GRP
			ON GRP.GN_Structure4IYID = ER.PG_Structure4ID
			AND GRP.PG_AcademicYearID = ER.PG_ExpEndYrID
		--LEFT JOIN ProAchieve.dbo.GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = ER.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = ER.PG_ExpEndYrID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = ER.PG_AggCourseID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = ER.PG_DifficultyOrDisabilityID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Enrolment_Attendance ATT 
			ON ATT.StudentID = ER.PG_StudentID
			AND ATT.CollegeID = ER.PG_ProviderID
			AND ATT.AcademicYearID = ER.PG_ExpEndYrID
			AND ATT.SequenceNo = ER.SequenceNo
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Student_UDF LAC
			ON LAC.StudentID = ER.PG_StudentID
			AND LAC.CollegeID = ER.PG_ProviderID
			AND LAC.AcademicYearID = ER.PG_ExpEndYrID
	'

	SET @SQL27 = '
		LEFT JOIN (
			SELECT
				PG_ExpEndYrID = MAX ( NR.PG_ExpEndYrID )
			FROM ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Timely NR
			WHERE
				NR.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
		) NR_L
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_FWPGSSA 
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_FWPGSSA.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_FWPGSSA.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_FWPGSSA.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_FWPGSSA.PG_WBLFundAgeGroupID IS NULL
			AND NR_FWPGSSA.PG_FrameworkID = ER.PG_FrameworkID
			AND NR_FWPGSSA.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_FWPGSSA.PG_SSA1ID = ER.PG_SSA1ID
			AND NR_FWPGSSA.PG_SSA2ID = ER.PG_SSA2ID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_YR
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_YR.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_YR.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_YR.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_YR.PG_WBLFundAgeGroupID IS NULL
			AND NR_YR.PG_FrameworkID IS NULL
			AND NR_YR.PG_ProgTypeID IS NULL
			AND NR_YR.PG_SSA1ID IS NULL
			AND NR_YR.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_YRG
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_YRG.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_YRG.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_YRG.PG_CollegeTypeID = 2
			AND NR_YRG.PG_WBLFundAgeGroupID IS NULL
			AND NR_YRG.PG_FrameworkID IS NULL
			AND NR_YRG.PG_ProgTypeID IS NULL
			AND NR_YRG.PG_SSA1ID IS NULL
			AND NR_YRG.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_FW
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_FW.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_FW.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_FW.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_FW.PG_WBLFundAgeGroupID IS NULL
			AND NR_FW.PG_FrameworkID = ER.PG_FrameworkID
			AND NR_FW.PG_ProgTypeID IS NULL
			AND NR_FW.PG_SSA1ID IS NULL
			AND NR_FW.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_AGE
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_AGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_AGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_AGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_AGE.PG_FrameworkID IS NULL
			AND NR_AGE.PG_ProgTypeID IS NULL
			AND NR_AGE.PG_SSA1ID IS NULL
			AND NR_AGE.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Timely NR_AGEGEN
			ON 
				CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_AGEGEN.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_AGEGEN.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_AGEGEN.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_AGEGEN.PG_ProgTypeID IS NULL
			AND NR_AGEGEN.PG_SSA1ID IS NULL
			AND NR_AGEGEN.PG_SSA2ID IS NULL
			AND NR_AGEGEN.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_AGEGEN.PG_SexID = ER.PG_SexID
			AND NR_AGEGEN.PG_DifficultyorDisabilityID IS NULL
			AND NR_AGEGEN.PG_LearningDifficultyID IS NULL
			AND NR_AGEGEN.PG_EthnicityID IS NULL
			AND NR_AGEGEN.PG_EthnicityGroupQARID IS NULL
	'

	SET @SQL28 = '
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_SSA1
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_SSA1.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_SSA1.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA1.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_SSA1.PG_WBLFundAgeGroupID IS NULL
			AND NR_SSA1.PG_FrameworkID IS NULL
			AND NR_SSA1.PG_ProgTypeID IS NULL
			AND NR_SSA1.PG_SSA1ID = ER.PG_SSA1ID
			AND NR_SSA1.PG_SSA2ID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_SSA2
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_SSA2.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_SSA2.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_SSA2.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_SSA2.PG_WBLFundAgeGroupID IS NULL
			AND NR_SSA2.PG_FrameworkID IS NULL
			AND NR_SSA2.PG_ProgTypeID IS NULL
			AND NR_SSA2.PG_SSA1ID IS NULL
			AND NR_SSA2.PG_SSA2ID = ER.PG_SSA2ID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_LEV
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_LEV.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_LEV.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEV.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_LEV.PG_WBLFundAgeGroupID IS NULL
			AND NR_LEV.PG_FrameworkID IS NULL
			AND NR_LEV.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_LEV.PG_SSA1ID IS NULL
			AND NR_LEV.PG_SSA2ID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Fwrk_Timely NR_LEVAGE
			ON CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_LEVAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_LEVAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_LEVAGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_LEVAGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_LEVAGE.PG_FrameworkID IS NULL
			AND NR_LEVAGE.PG_ProgTypeID = ER.PG_ProgTypeID
			AND NR_LEVAGE.PG_SSA1ID IS NULL
			AND NR_LEVAGE.PG_SSA2ID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Timely NR_ETH
			ON 
				CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_ETH.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_ETH.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETH.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_ETH.PG_ProgTypeID IS NULL
			AND NR_ETH.PG_SSA1ID IS NULL
			AND NR_ETH.PG_SSA2ID IS NULL
			AND NR_ETH.PG_WBLFundAgeGroupID IS NULL
			AND NR_ETH.PG_SexID IS NULL
			AND NR_ETH.PG_DifficultyorDisabilityID IS NULL
			AND NR_ETH.PG_EthnicityID = ER.PG_EthnicityID
			AND NR_ETH.PG_EthnicityGroupQARID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Timely NR_ETHAGE
			ON 
				CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_ETHAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_ETHAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_ETHAGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_ETHAGE.PG_ProgTypeID IS NULL
			AND NR_ETHAGE.PG_SSA1ID IS NULL
			AND NR_ETHAGE.PG_SSA2ID IS NULL
			AND NR_ETHAGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_ETHAGE.PG_SexID IS NULL
			AND NR_ETHAGE.PG_DifficultyorDisabilityID IS NULL
			AND NR_ETHAGE.PG_EthnicityID = ER.PG_EthnicityID
			AND NR_ETHAGE.PG_EthnicityGroupQARID IS NULL
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Timely NR_DIF
			ON 
				CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_DIF.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_DIF.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIF.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_DIF.PG_ProgTypeID IS NULL
			AND NR_DIF.PG_SSA1ID IS NULL
			AND NR_DIF.PG_SSA2ID IS NULL
			AND NR_DIF.PG_WBLFundAgeGroupID IS NULL
			AND NR_DIF.PG_SexID IS NULL
			AND NR_DIF.PG_LearningDifficultyID = ER.PG_DifficultyorDisabilityID
			AND NR_DIF.PG_EthnicityID IS NULL
			AND NR_DIF.PG_EthnicityGroupQARID IS NULL
        LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NationalRates_APP_Demo_Timely NR_DIFAGE
			ON 
				CASE
					WHEN ER.PG_ExpEndYrID >= NR_L.PG_ExpEndYrID THEN
						CASE
							WHEN NR_DIFAGE.PG_ExpEndYrID = NR_L.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
					ELSE 
						CASE
							WHEN ER.PG_ExpEndYrID = NR_DIFAGE.PG_ExpEndYrID THEN 1
							ELSE 0 
						END
				END = 1
			AND NR_DIFAGE.PG_CollegeTypeID = ' + CAST ( @CollegeType AS VARCHAR(6) ) + '
			AND NR_DIFAGE.PG_ProgTypeID IS NULL
			AND NR_DIFAGE.PG_SSA1ID IS NULL
			AND NR_DIFAGE.PG_SSA2ID IS NULL
			AND NR_DIFAGE.PG_WBLFundAgeGroupID = ER.PG_WBLFundAgeGroupID
			AND NR_DIFAGE.PG_SexID IS NULL
			AND NR_DIFAGE.PG_DifficultyorDisabilityID = ER.PG_DifficultyorDisabilityID
			AND NR_DIFAGE.PG_EthnicityID IS NULL
			AND NR_DIFAGE.PG_EthnicityGroupQARID IS NULL
		
		WHERE
			ER.PG_ExpEndYrID = ''' + @AcademicYear + '''
			--AND MYS.LastAcademicYearID = ''' + @AcademicYear + '''
			--Default filters applied in ProAchieve
			AND ER.IsNotFundedAllYears = 0
			AND ER.WB_ProgGroupID = 1
	'

	SET @SQL29 = '
		UNION ALL

		SELECT
			EndYear = HE.PG_HybridEndYearID,
			AcademicYear = HE.PG_AcademicYearID,
			SummaryType =
                ''HE_Overall_''
                + CASE
                    WHEN 
                        MYS.DefaultSummary = 1
                        AND MYS.IsArchived = 0
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''AllAims''
                    ELSE ''ERROR''
                END,
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.HE_MYSName,
			NumYears = 0,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = HE.PG_StudentID,
			LearnerName = HE.StudentName,
			Gender = HE.PG_SexID,
			AgeGroup = AGE.HE_AgeGroupName,
			EthnicityCode = HE.PG_EthnicityID,
			EthnicityName = ETH.PG_EthnicityName,
			EthnicGroupCode = HE.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = HE.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			
            IsALSRequired = CASE WHEN STU.UserDefined1 = ''Y'' THEN 1 ELSE 0 END,
            IsCareLeaver = CASE WHEN STU.UserDefined2 = ''Y'' THEN 1 ELSE 0 END,
            IsLookedAfter = CASE WHEN STU.UserDefined3 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungCarer = CASE WHEN STU.UserDefined4 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungParent = CASE WHEN STU.UserDefined5 = ''Y'' THEN 1 ELSE 0 END,

			CampusID = COALESCE ( STU.CampusID, ''-'' ),
			FacCode = HE.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, ''-- Unknown --''),
			TeamCode = HE.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, ''-- Unknown --''),
			CostCentreCode = HE.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, ''-- Unknown --''),
			SSA1Code = HE.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = HE.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = HE.EnrolmentUserDefined1,
			SequenceNo = HE.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = HE.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = NULL,
			AimTypeName = NULL,
			DurationCode = HE.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = HE.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = HE.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = ''X'',
			EngOrMathsName = ''Neither'',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NULL,
			NVQLevelGrpName = NULL,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = HE.PG_GradeID,

			FundModelCode = ''HE'',
			FundModelName = ''Higher Education'',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = HE.P_Count_OverallQSRExclude,
			IsLeaver = HE.P_Count_OverallQSRExclude,
			LessonsExpected = HE.Att_Exp,
			LessonsAttended = HE.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN HE.Att_Exp = 0 THEN 0
						ELSE CAST ( HE.Att_Act AS FLOAT ) / CAST ( HE.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ATT.TotalLates,
			PuncPer = 
				ROUND (
					CASE
						WHEN HE.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ATT.TotalLates AS FLOAT ) / CAST ( HE.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = HE.PVXfr,
			IsCont = HE.PVCont,
			IsWdr = HE.PVWithdrawn + HE.PVWithdrawn1stNov,
			IsWdrInQualifyingPeriod = HE.PVWithdrawn,
			IsWdrAfterQualifyingPeriod = HE.PVWithdrawn1stNov,
			OutOfFunding30 = 0,
			OutOfFunding60 = 0,
			OutOfFunding90 = 0,
			IsComp = HE.P_Complete_OverallQSRExclude,
			IsRetInYr = HE.PVCont + HE.P_Complete_OverallQSRExclude,
			IsRet = HE.PVCont + HE.P_Complete_OverallQSRExclude,
			IsAch = HE.P_Ach_OverallQSRExclude,
			IsPassAToC = 0,
	'

	SET @SQL30 = '
			NatRate_Yr_Leave = NULL,
			NatRate_Yr_Ach = NULL,
			NatRate_Yr_AchPer = NULL,
			NatRate_YrGFE_Leave = NULL,
			NatRate_YrGFE_Ach = NULL,
			NatRate_YrGFE_AchPer = NULL,
			NatRate_Aim_Leave = NULL,
			NatRate_Aim_Ach = NULL,
			NatRate_Aim_AchPer = NULL,
			NatRate_FworkPTSSA_Leave = NULL,
			NatRate_FworkPTSSA_Ach = NULL,
			NatRate_FworkPTSSA_AchPer = NULL,
			NatRate_Age_Leave = NULL,
			NatRate_Age_Ach = NULL,
			NatRate_Age_AchPer = NULL,
			NatRate_AgeGender_Leave = NULL,
			NatRate_AgeGender_Ach = NULL,
			NatRate_AgeGender_AchPer = NULL,
			NatRate_Level_Leave = NULL,
			NatRate_Level_Ach = NULL,
			NatRate_Level_AchPer = NULL,
            NatRate_LevelAge_Leave = NULL,
			NatRate_LevelAge_Ach = NULL,
			NatRate_LevelAge_AchPer = NULL,
            NatRate_LevelGrp_Leave = NULL,
			NatRate_LevelGrp_Ach = NULL,
			NatRate_LevelGrp_AchPer = NULL,
            NatRate_LevelGrpAge_Leave = NULL,
			NatRate_LevelGrpAge_Ach = NULL,
			NatRate_LevelGrpAge_AchPer = NULL,
			NatRate_QualType_Leave = NULL,
			NatRate_QualType_Ach = NULL,
			NatRate_QualType_AchPer = NULL,
			NatRate_QualTypeAge_Leave = NULL,
			NatRate_QualTypeAge_Ach = NULL,
			NatRate_QualTypeAge_AchPer = NULL,
			NatRate_Ethnicity_Leave = NULL,
			NatRate_Ethnicity_Ach = NULL,
			NatRate_Ethnicity_AchPer = NULL,
            NatRate_EthnicityAge_Leave = NULL,
			NatRate_EthnicityAge_Ach = NULL,
			NatRate_EthnicityAge_AchPer = NULL,
			NatRate_SSA1_Leave = NULL,
			NatRate_SSA1_Ach = NULL,
			NatRate_SSA1_AchPer = NULL,
			NatRate_SSA2_Leave = NULL,
			NatRate_SSA2_Ach = NULL,
			NatRate_SSA2_AchPer = NULL,
			NatRate_DifDis_Leave = NULL,
			NatRate_DifDis_Ach = NULL,
			NatRate_DifDis_AchPer = NULL,
            NatRate_DifDisAge_Leave = NULL,
			NatRate_DifDisAge_Ach = NULL,
			NatRate_DifDisAge_AchPer = NULL
	'

	SET @SQL31 = '
		FROM ' + @ProAchieveDatabaseLocation + 'HE_MYS_Low HE
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'vHE_MYS_RDS_Seln MYS 
			ON MYS.HE_MYSID = HE.HE_MYSID
			AND MYS.PG_ProviderID = HE.PG_ProviderID
			--AND MYS.DefaultSummary = 1
            AND MYS.IsArchived = 0
            --AND MYS.RulesApplied = 0
            --AND MYS.IncludeAllAimTypes = 1
            AND MYS.LastAcademicYearID = (
                SELECT 
                    MaxYear = MAX ( MYS2.LastAcademicYearID )
                FROM ' + @ProAchieveDatabaseLocation + 'vHE_MYS_RDS_Seln MYS2
                WHERE
                    MYS2.DefaultSummary = MYS.DefaultSummary
                    AND MYS2.IsArchived = MYS.IsArchived
                    AND MYS2.RulesApplied = MYS.RulesApplied
                    AND MYS2.IncludeAllAimTypes = MYS.IncludeAllAimTypes
            )
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'Student STU
			ON STU.StudentID = HE.PG_StudentID
			AND STU.AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Aim AIM 
			ON AIM.GN_AimID = HE.PG_AimID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = HE.PG_EthnicityID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = HE.PG_EthnicGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = HE.PG_SSA1ID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = HE.PG_SSA2ID
	'

	SET @SQL32 = '
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Duration DUR
			ON DUR.PG_DurationID = HE.PG_DurationID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = HE.PG_DurationGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationType DURT
			ON DURT.PG_DurationTypeID = HE.PG_DurationTypeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_QualSize QS
			ON QS.PG_QualSizeID = HE.PG_QualSizeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = HE.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = ''Attend'',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = ''Punc'',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'HE_AgeGroup AGE 
			ON AGE.HE_AgeGroupID = HE.HE_AgeGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = HE.PG_StudentID
			AND FAM.PG_ProviderID = HE.PG_ProviderID
			AND FAM.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = HE.PG_NVQLevelID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = HE.PG_Structure1ID
			AND DIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = HE.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure3IY CC
			ON CC.GN_Structure3IYID = HE.PG_Structure3ID
			AND CC.PG_AcademicYearID = HE.PG_AcademicYearID
		--LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = HE.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = HE.PG_HybridEndYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = HE.PG_AggCourseID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = HE.PG_DifficultyOrDisabilityID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Enrolment_Attendance ATT 
			ON ATT.StudentID = HE.PG_StudentID
			AND ATT.CollegeID = HE.PG_ProviderID
			AND ATT.AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Student_UDF LAC
			ON LAC.StudentID = HE.PG_StudentID
			AND LAC.CollegeID = HE.PG_ProviderID
			AND LAC.AcademicYearID = HE.PG_AcademicYearID
			AND ATT.SequenceNo = HE.SequenceNo
	'

	SET @SQL33 = '
		WHERE 
			HE.PG_HybridEndYearID = ''' + @AcademicYear + '''
			--AND MYS.LastAcademicYearID = ''' + @AcademicYear + '''
	'

	SET @SQL34 = '
		UNION ALL

		SELECT
			EndYear = HE.PG_ExpEndYrID,
			AcademicYear = HE.PG_AcademicYearID,
			SummaryType =
                ''HE_Timely_''
                + CASE
                    WHEN 
                        MYS.DefaultSummary = 1
                        AND MYS.IsArchived = 0
                        AND MYS.RulesApplied = 0
                        AND MYS.IncludeAllAimTypes = 1
                        THEN ''AllAims''
                    ELSE ''ERROR''
                END,
			DefaultSummary = MYS.DefaultSummary,
			ProviderID = MYS.PG_ProviderID,
			ProviderName = MYS.PG_ProviderName,
			Summary = MYS.Description,
			SummaryStatus = MYS.Status,
			AcademicYears = MYS.HE_MYSName,
			NumYears = 0,
			LastAcademicYear = MYS.LastAcademicYearID,
			RulesApplied = MYS.RulesApplied,
			LastUpdated = MYS.LastUpdated,

			LearnerRef = HE.PG_StudentID,
			LearnerName = HE.StudentName,
			Gender = HE.PG_SexID,
			AgeGroup = AGE.HE_AgeGroupName,
			EthnicityCode = HE.PG_EthnicityID,
			EthnicityName = ETH.PG_EthnicityName,
			EthnicGroupCode = HE.PG_EthnicGroupID,
			EthnicGroupName = ETHG.PG_EthnicGroupName,
			EthnicGroupQARCode = ETHQ.PG_EthnicityGroupQARID,
			EthnicGroupQARName = ETHQ.PG_EthnicityGroupQARName,
			EthnicGroupSimpleCode = ETHGS.PG_EthnicGroupSimpleID,
			EthnicGroupSimpleName = ETHGS.PG_EthnicGroupSimpleName,
			DiffDissCode = HE.PG_DifficultyOrDisabilityID,
			DiffDissName = DIF.ShortDescription,
			IsHighNeeds = COALESCE ( FAM.PG_LearnFAMTypeHNSID, 0 ),
			IsFreeMealsEligible = CASE WHEN FAM.PG_LearnFAMTypeFMEID IS NOT NULL THEN 1 ELSE 0 END,
			
            IsALSRequired = CASE WHEN STU.UserDefined1 = ''Y'' THEN 1 ELSE 0 END,
            IsCareLeaver = CASE WHEN STU.UserDefined2 = ''Y'' THEN 1 ELSE 0 END,
            IsLookedAfter = CASE WHEN STU.UserDefined3 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungCarer = CASE WHEN STU.UserDefined4 = ''Y'' THEN 1 ELSE 0 END,
            IsYoungParent = CASE WHEN STU.UserDefined5 = ''Y'' THEN 1 ELSE 0 END,
            
			CampusID = COALESCE ( STU.CampusID, ''-'' ),
			FacCode = HE.PG_Structure1ID,
			FacName = COALESCE(DIV.GN_Structure1IYName, ''-- Unknown --''),
			TeamCode = HE.PG_Structure2ID,
			TeamName = COALESCE(SUBDIV.GN_Structure2IYName, ''-- Unknown --''),
			CostCentreCode = HE.PG_Structure3ID,
			CostCentreName = COALESCE(CC.GN_Structure3IYName, ''-- Unknown --''),
			SSA1Code = HE.PG_SSA1ID,
			SSA1Name = SSA1.SSA_Tier1_Desc,
			SSA2Code = HE.PG_SSA2ID,
			SSA2Name = SSA2.SSA_Tier2_Desc,
			ProgTypeCode = NULL,
			ProgTypeShortName = NULL,
			ProgTypeName = NULL,
			FrameworkCode = NULL,
			FrameworkName = NULL,
			CourseCode = CRS.PG_AggCourseID,
			CourseName = CRS.PG_AggCourseName,
			GroupCode = HE.EnrolmentUserDefined1,
			SequenceNo = HE.SequenceNo,

			AimRef = AIM.GN_AimID,
			AimName = AIM.GN_AimName,
			QualTypeCode = HE.PG_QualSizeID,
			QualTypeName = QS.PG_QualSizeName,
			LARSAimTypeCode = NULL,
			LARSAimTypeName = NULL,
			AimTypeCode = NULL,
			AimTypeName = NULL,
			DurationCode = HE.PG_DurationID,
			DurationName = DUR.PG_DurationName,
			DurationGroupCode = HE.PG_DurationGroupID,
			DurationGroupName = DURG.PG_DurationGroupName,
			DurationTypeCode = HE.PG_DurationTypeID,
			DurationTypeName = DURT.PG_DurationTypeName,
			DurationTypeGroupCode = NULL,
			DurationTypeGroupName = NULL,

			EngOrMathsCode = ''X'',
			EngOrMathsName = ''Neither'',
			NVQLevelCode = NVQ.PG_NVQLevelCPRID,
			NVQLevelName = NVQ.PG_NVQLevelCPRName,
			NVQLevelGrpCode = NULL,
			NVQLevelGrpName = NULL,
			AwardBody = AIM.PG_AwardBodyID,
			Grade = HE.PG_GradeID,

			FundModelCode = ''HE'',
			FundModelName = ''Higher Education'',
			IsEFAFunded = 0,
			IsAdvLearnLoanFunded = 0,
			IsStart = HE.P_Count_TimelyQSRExclude,
			IsLeaver = HE.P_Count_TimelyQSRExclude,
			LessonsExpected = HE.Att_Exp,
			LessonsAttended = HE.Att_Act,
			AttendPer = 
				ROUND (
					CASE
						WHEN HE.Att_Exp = 0 THEN 0
						ELSE CAST ( HE.Att_Act AS FLOAT ) / CAST ( HE.Att_Exp AS FLOAT )
					END
				, 4 ),
			AttendTar = TAR.Attend,
			LessonsLate = ATT.TotalLates,
			PuncPer = 
				ROUND (
					CASE
						WHEN HE.Att_Act = 0 THEN 0
						ELSE 100 - CAST ( ATT.TotalLates AS FLOAT ) / CAST ( HE.Att_Act AS FLOAT )
					END
				, 4 ),
			PuncTar = TAR.Punc,
			IsXfr = HE.PVXfr,
			IsCont = HE.PVCont,
			IsWdr = HE.PVWithdrawn + HE.PVWithdrawn1stNov,
			IsWdrInQualifyingPeriod = HE.PVWithdrawn,
			IsWdrAfterQualifyingPeriod = HE.PVWithdrawn1stNov,
			OutOfFunding30 = 0,
			OutOfFunding60 = 0,
			OutOfFunding90 = 0,
			IsComp = HE.P_Complete_TimelyQSRExclude,
			IsRetInYr = HE.PVCont + HE.P_Complete_TimelyQSRExclude,
			IsRet = HE.PVCont + HE.P_Complete_TimelyQSRExclude,
			IsAch = HE.P_Ach_TimelyQSRExclude,
			IsPassAToC = 0,
	'

	SET @SQL35 = '
			NatRate_Yr_Leave = NULL,
			NatRate_Yr_Ach = NULL,
			NatRate_Yr_AchPer = NULL,
			NatRate_YrGFE_Leave = NULL,
			NatRate_YrGFE_Ach = NULL,
			NatRate_YrGFE_AchPer = NULL,
			NatRate_Aim_Leave = NULL,
			NatRate_Aim_Ach = NULL,
			NatRate_Aim_AchPer = NULL,
			NatRate_FworkPTSSA_Leave = NULL,
			NatRate_FworkPTSSA_Ach = NULL,
			NatRate_FworkPTSSA_AchPer = NULL,
			NatRate_Age_Leave = NULL,
			NatRate_Age_Ach = NULL,
			NatRate_Age_AchPer = NULL,
			NatRate_AgeGender_Leave = NULL,
			NatRate_AgeGender_Ach = NULL,
			NatRate_AgeGender_AchPer = NULL,
			NatRate_Level_Leave = NULL,
			NatRate_Level_Ach = NULL,
			NatRate_Level_AchPer = NULL,
            NatRate_LevelAge_Leave = NULL,
			NatRate_LevelAge_Ach = NULL,
			NatRate_LevelAge_AchPer = NULL,
            NatRate_LevelGrp_Leave = NULL,
			NatRate_LevelGrp_Ach = NULL,
			NatRate_LevelGrp_AchPer = NULL,
            NatRate_LevelGrpAge_Leave = NULL,
			NatRate_LevelGrpAge_Ach = NULL,
			NatRate_LevelGrpAge_AchPer = NULL,
			NatRate_QualType_Leave = NULL,
			NatRate_QualType_Ach = NULL,
			NatRate_QualType_AchPer = NULL,
			NatRate_QualTypeAge_Leave = NULL,
			NatRate_QualTypeAge_Ach = NULL,
			NatRate_QualTypeAge_AchPer = NULL,
			NatRate_Ethnicity_Leave = NULL,
			NatRate_Ethnicity_Ach = NULL,
			NatRate_Ethnicity_AchPer = NULL,
            NatRate_EthnicityAge_Leave = NULL,
			NatRate_EthnicityAge_Ach = NULL,
			NatRate_EthnicityAge_AchPer = NULL,
			NatRate_SSA1_Leave = NULL,
			NatRate_SSA1_Ach = NULL,
			NatRate_SSA1_AchPer = NULL,
			NatRate_SSA2_Leave = NULL,
			NatRate_SSA2_Ach = NULL,
			NatRate_SSA2_AchPer = NULL,
			NatRate_DifDis_Leave = NULL,
			NatRate_DifDis_Ach = NULL,
			NatRate_DifDis_AchPer = NULL,
            NatRate_DifDisAge_Leave = NULL,
			NatRate_DifDisAge_Ach = NULL,
			NatRate_DifDisAge_AchPer = NULL
	'

	SET @SQL36 = '
		FROM ' + @ProAchieveDatabaseLocation + 'HE_MYS_Low HE
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'vHE_MYS_RDS_Seln MYS 
			ON MYS.HE_MYSID = HE.HE_MYSID
			AND MYS.PG_ProviderID = HE.PG_ProviderID
			--AND MYS.DefaultSummary = 1
            AND MYS.IsArchived = 0
            --AND MYS.RulesApplied = 0
            --AND MYS.IncludeAllAimTypes = 1
            AND MYS.LastAcademicYearID = (
                SELECT 
                    MaxYear = MAX ( MYS2.LastAcademicYearID )
                FROM ' + @ProAchieveDatabaseLocation + 'vHE_MYS_RDS_Seln MYS2
                WHERE
                    MYS2.DefaultSummary = MYS.DefaultSummary
                    AND MYS2.IsArchived = MYS.IsArchived
                    AND MYS2.RulesApplied = MYS.RulesApplied
                    AND MYS2.IncludeAllAimTypes = MYS.IncludeAllAimTypes
            )
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'Student STU
			ON STU.StudentID = HE.PG_StudentID
			AND STU.AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Aim AIM 
			ON AIM.GN_AimID = HE.PG_AimID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Ethnicity ETH
			ON ETH.PG_EthnicityID = HE.PG_EthnicityID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicityGroupQAR ETHQ
			ON ETHQ.PG_EthnicityGroupQARID = ETH.PG_EthnicityGroupQARID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroup ETHG
			ON ETHG.PG_EthnicGroupID = HE.PG_EthnicGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_EthnicGroupSimple ETHGS
			ON ETHGS.PG_EthnicGroupSimpleID = ETHG.PG_EthnicGroupSimpleID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA1 SSA1 
			ON SSA1.SSA_Tier1_code = HE.PG_SSA1ID
		INNER JOIN ' + @ProGeneralDatabaseLocation + 'SSA2 SSA2 
			ON SSA2.SSA_Tier2_code = HE.PG_SSA2ID
	'

	SET @SQL37 = '
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_Duration DUR
			ON DUR.PG_DurationID = HE.PG_DurationID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationGroup DURG
			ON DURG.PG_DurationGroupID = HE.PG_DurationGroupID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_DurationType DURT
			ON DURT.PG_DurationTypeID = HE.PG_DurationTypeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PG_QualSize QS
			ON QS.PG_QualSizeID = HE.PG_QualSizeID
		INNER JOIN ' + @ProAchieveDatabaseLocation + 'PM_MS_ThresholdValue MINS
			ON MINS.PG_QualSizeID = HE.PG_QualSizeID
			AND MINS.ThresholdID = 1
		INNER JOIN (
			SELECT
				TAR.Attend,
				TAR.Punc
			FROM (
				SELECT
					TargetType = ''Attend'',
					TargetValue = 90

				UNION ALL

				SELECT
					TargetType = ''Punc'',
					TargetValue = 90
			) T
			PIVOT (
				SUM ( T.TargetValue )
				FOR
					T.TargetType IN ( [Attend], [Punc] )
			) AS TAR
		) TAR
			ON 1 = 1
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'HE_AgeGroup AGE 
			ON AGE.HE_AgeGroupID = HE.HE_AgeGroupID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_Learner_FAM_Pivoted FAM
			ON FAM.PG_StudentID = HE.PG_StudentID
			AND FAM.PG_ProviderID = HE.PG_ProviderID
			AND FAM.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_NVQLevelCPR NVQ 
			ON NVQ.PG_NVQLevelCPRID = HE.PG_NVQLevelID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure1IY DIV 
			ON DIV.GN_Structure1IYID = HE.PG_Structure1ID
			AND DIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure2IY SUBDIV
			ON SUBDIV.GN_Structure2IYID = HE.PG_Structure2ID
			AND SUBDIV.PG_AcademicYearID = HE.PG_AcademicYearID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_Structure3IY CC
			ON CC.GN_Structure3IYID = HE.PG_Structure3ID
			AND CC.PG_AcademicYearID = HE.PG_AcademicYearID
		--LEFT JOIN ' + @ProAchieveDatabaseLocation + 'GN_CourseStructureIY CRS 
		--	ON CRS.PG_CourseID = HE.PG_AggCourseID
		--	AND CRS.PG_AcademicYearID = HE.PG_ExpEndYrID
		LEFT JOIN ' + @ProAchieveDatabaseLocation + 'PG_AggCourse CRS 
			ON CRS.PG_AggCourseID = HE.PG_AggCourseID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'DifficultyOrDisability DIF
			ON DIF.DifficultyOrDisabilityID = HE.PG_DifficultyOrDisabilityID
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Enrolment_Attendance ATT 
			ON ATT.StudentID = HE.PG_StudentID
			AND ATT.CollegeID = HE.PG_ProviderID
			AND ATT.AcademicYearID = HE.PG_AcademicYearID
			AND ATT.SequenceNo = HE.SequenceNo
		LEFT JOIN ' + @ProGeneralDatabaseLocation + 'Student_UDF LAC
			ON LAC.StudentID = HE.PG_StudentID
			AND LAC.CollegeID = HE.PG_ProviderID
			AND LAC.AcademicYearID = HE.PG_AcademicYearID
	'

	SET @SQL38 = '
		WHERE 
			HE.PG_ExpEndYrID = ''' + @AcademicYear + '''
			--AND MYS.LastAcademicYearID = ''' + @AcademicYear + '''

		ORDER BY
			EndYear,
			SummaryType,
			ProviderID,
			CampusID,
			FacCode,
			TeamCode,
			CostCentreCode,
			CourseCode,
			AimRef,
			LearnerName,
			LearnerRef'

	EXEC(
		@SQL1 + @SQL2 + @SQL3 + @SQL4 + @SQL5 + @SQL6 + @SQL7 + @SQL8
        + @SQL9 + @SQL10 + @SQL11 + @SQL12 + @SQL13 + @SQL14 + @SQL15 + @SQL16 
		+ @SQL17 + @SQL18 + @SQL19 + @SQL20 + @SQL21 + @SQL22
        + @SQL23 + @SQL24 + @SQL25 + @SQL26 + @SQL27 + @SQL28 
        + @SQL29 + @SQL30 + @SQL31 + @SQL32 + @SQL33 
        + @SQL34 + @SQL35 + @SQL36 + @SQL37 + @SQL38
	)
	--PRINT(@SQL5)
END